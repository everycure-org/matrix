name: CI pipline

on:
  workflow_dispatch: {}
  push:
    paths: 
      - pipelines/matrix/**


jobs:
  run-tests:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./pipelines/matrix

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          #cache: 'poetry'
          python-version: "3.11"

      # cache python dependencies
      - run: mkdir -p .venv # ensures caching of this folder works
      - uses: actions/cache@v4
        name: python dependencies caching
        with:
          path: ${{ github.workspace }}/pipelines/matrix/.venv/
          key: venv #always cache 
          save-always: true
      # cache pre-commit dependencies
      - uses: actions/cache@v4
        name: pre-commit caching
        with:
          path: |
            ~/.cache/pre-commit
          key: pre-commit # always cache
          save-always: true
      - name: Run pre-commit hook (fail-fast)
        run: |
          pip install pre-commit
          pre-commit install --install-hooks
      - name: Print all requirements
        run: |
          pip freeze

      - name: Run pre-commit hooks
        run: |
          git fetch origin main
          # run pre-commit on everything that's different from main
          pre-commit run -s origin/main -o HEAD

      - name: Install the project dependencies
        run: |
          pip install uv
          uv venv
          uv pip install -r requirements.txt

      # cache python dependencies
      - uses: actions/cache@v4
        name: pytest-testmon cache
        with:
          path: ${{ github.workspace }}/.testmondata
          key: testmon=${{ github.ref_name }}-${{ matrix.python-version }}
          restore-keys: testmon=${{ matrix.python-version }}-main
          save-always: true
      
      - name: Run unit tests 
        run: |
          .venv/bin/pytest --testmon -v tests/