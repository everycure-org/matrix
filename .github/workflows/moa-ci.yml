name: MoA CI pipline

on:
    pull_request:
      # Sequence of patterns matched against refs/heads
      branches:
        - main
      types:
        - opened
        - reopened
        - synchronize
        - ready_for_review
      paths: 
        - services/moa_visualizer/**
        - .github/workflows/moa-ci.yml
  
    push:
      branches:
        - main
      paths: 
        - services/moa_visualizer/**
        - .github/workflows/moa-ci.yml


jobs:
  # leveraging a paths-filter approach to be able to make this run required for all PRs while still
  # not blocking merging with "Expected" for those runs that have a paths filter
  # FUTURE eventually github will likely fix this
  # https://github.com/orgs/community/discussions/26698
  paths_filter:
    if: github.event.pull_request.draft == false || github.ref == 'refs/heads/main'
    runs-on: 'ubuntu-latest'
    permissions: 
      pull-requests: read
      contents: 'read'
    outputs: 
      changed: ${{ steps.changes.outputs.src }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with: 
          sparse-checkout: |
            pipelines/
            .github/
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - services/moa-visualizer/**
              - .github/workflows/moa-ci.yml

  ci:
    runs-on:  'gha-runner-scale-set'
    needs: [paths_filter]
    if: needs.paths_filter.outputs.changed == 'true' && (github.event.pull_request.draft == false || github.ref == 'refs/heads/main')
    defaults:
      run:
        working-directory: ./services/moa_visualizer
    steps:
      - uses: actions/checkout@v4
        with: 
          sparse-checkout: |
            services/moa_visualizer/
      - run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y make build-essential libssl-dev zlib1g-dev \
          libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
          libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
          libffi-dev liblzma-dev
          curl -fsSL https://pyenv.run | bash # recommend. Else see here for alternative: https://github.com/pyenv/pyenv
          export PYENV_ROOT="$HOME/.pyenv"
          [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init - bash)"
          eval "$(pyenv virtualenv-init -)"
          pyenv install 3.11
          pyenv global 3.11 && pyenv global
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - run: make docker_build

  push_image:
      needs: [ci]
      if: github.ref == 'refs/heads/main'
      runs-on: 'gha-runner-scale-set'
      environment: dev
      permissions: write-all
      defaults:
        run:
          working-directory: services/moa_visualizer/
  
      steps:
        - uses: 'google-github-actions/auth@v2'
          with:
            project_id: ${{vars.project_id}}
            workload_identity_provider: ${{vars.workload_identity_provider}}
            service_account: ${{vars.service_account}}
  
        - name: "Set up Cloud SDK"
          uses: "google-github-actions/setup-gcloud@v1"
  
        - name: "Docker auth"
          run: |-
            gcloud auth configure-docker ${{ vars.region }}-docker.pkg.dev --quiet
  
        - run: make docker_push