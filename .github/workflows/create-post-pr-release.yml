name: Release
on:
  pull_request:
    types: [closed]

jobs:
  approved:
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'Release')
    runs-on: ubuntu-latest
    name: PR approval
    permissions:
      pull-requests: 'read'

    steps:
      - name: "Check the PR state"
        run: echo "The release PR is approved and merged"

  create_release:
    needs: [approved]
    runs-on: ubuntu-latest
    name: Create release
    permissions:
      contents: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Discover the intended release
        id: fetch_release_version
        env:
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          set -euxo pipefail
          # Note: this could be an intermediate release
          intended_release=${PR_BRANCH_NAME##release/}
          echo "intended_tag=${intended_release}" >> "$GITHUB_ENV"  

      - name: Discover Latest Official Release on GitHub
        run: |
          latest_official_release=$(gh release list --jq '.[0].tagName' --json tagName --order desc)
          echo "latest_official_release=${latest_official_release}" >> "$GITHUB_ENV"

      - name: Create GitHub release
        env:
            GH_TOKEN: ${{ github.token }}
            POSTS_DIR: docs/src/releases/posts
        run: |
          set -euxo pipefail
          echo "Creating release"
          # Check if notes file exists, because there's no notes generated for patch bump
          NOTES_FILE="${GITHUB_WORKSPACE}/${POSTS_DIR}/${{ env.latest_tag }}/notes.md"
          if [ -f "$NOTES_FILE" ]; then
            gh release create "${{ env.latest_tag }}" \
              --notes-file "$NOTES_FILE" \
              --title "${{ env.latest_tag }}" \
              --latest
          else
            echo "Notes file not found, using empty notes."
            gh release create "${{ env.latest_tag }}" \
              --notes "This is weekly patch bump." \
              --title "${{ env.latest_tag }}" \
              --latest
          fi
