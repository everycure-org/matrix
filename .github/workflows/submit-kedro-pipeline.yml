name: Automate kedro sumbit release run periodically

on:
  push:
    branches:
      - 'gh-actions-weekly-submit'
  # schedule:
  #   - cron: '30 9 * * 1' # 9:30 AM every Monday
  #   - cron: '30 9 1 * *' # 9:30 AM on the first of every month

env:
  project_id: 'mtrx-hub-dev-3of'
  workload_identity_provider: 'projects/938607797672/locations/global/workloadIdentityPools/matrix-pool-rw/providers/matrix-gh-provider-rw'
  service_account: 'sa-github-actions-rw@mtrx-hub-dev-3of.iam.gserviceaccount.com'
  region: 'us-central1'
  cluster: 'compute-cluster'

jobs:
  submit_data_release_periodically:
    runs-on: ubuntu-latest
    name: Submit the Kedro Pipeline Periodically
    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'

    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          # note that repo dispatch will checkout main
          fetch-tags: true
          fetch-depth: 0  # full depth needed so we can pass the AI all logs since the last release.
      
      - name: Fetch latest tag
        id: fetch_latest_tag
        run: |
          latest_tag=$(git tag --list --sort="v:refname" | tail -n 1)
          echo "latest_tag=${latest_tag}" >> "$GITHUB_ENV"
          echo "Latest tag is ${latest_tag}"

      - name: Install dependencies
        working-directory: docs/scripts
        run: |
          pip install uv
          uv venv -p 3.11
          uv pip install semver

      - name: Increment patch version
        working-directory: docs/scripts
        # if : github.event.schedule == '30 9 * * 1' # weekly bump
        run: 
          uv run patch_bump.py

      # - name: Increment minor version
      #   working-directory: docs/scripts
      #   # if : github.event.schedule == '30 9 1 * *' # monthly bump
      #   run:
      #     uv run minor_bump.py

      - name: Print release version
        run: |
          cat "$GITHUB_ENV"
          echo "New release version is '${{ env.release_version }}'"

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{env.project_id}}
          workload_identity_provider: ${{env.workload_identity_provider}}
          service_account: ${{env.service_account}}

      - uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      - uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{env.cluster}}
          location: ${{env.region}}

      - name: Check gcl
        run: |
          which gcloud  
          gcloud config list

      - name: Authenticate kubectl
        run: |
          gcloud container clusters get-credentials ${{env.cluster}} \
            --project ${{env.project_id}} \
            --region ${{env.region}} 

      - name: Check kubectl
        run: |
          kubectl get nodes
          kubectl get ns

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # - name: Set up kedro project dependencies
      #   working-directory: pipelines/matrix
      #   run: |
      #     pip install -r requirements.txt

      - name: Install argo CLI
        run: |
          curl -sLO https://github.com/argoproj/argo-workflows/releases/latest/download/argo-linux-amd64.gz
          gunzip argo-linux-amd64.gz
          chmod +x argo-linux-amd64
          sudo mv argo-linux-amd64 /usr/local/bin/argo
          argo version

      # - name: Submit the kedro pipeline
      #   working-directory: pipelines/matrix
      #   run: |
      #     echo "Submit the kedro pipeline"
      #     kedro submit \
      #       --username GH-Actions-bot \
      #       --namespace argo-workflows \
      #       --run-name auto-kg-release \
      #       --release-version "${{ env.release_version }}" \
      #       --pipeline ingestion \
      #       --headless \
      #       --is-test \
      #       --run-from-gh

