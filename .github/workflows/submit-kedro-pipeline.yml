name: Automate kedro submit release run periodically

on:
  push:
    branches:
      - 'gh-actions-weekly-submit'
  schedule:
    - cron: '30 9 1 * 1' # At 09:30 on the 1st day of the month and on Monday.

env:
  project_id: 'mtrx-hub-dev-3of'
  workload_identity_provider: 'projects/938607797672/locations/global/workloadIdentityPools/matrix-pool-rw/providers/matrix-gh-provider-rw'
  service_account: 'sa-github-actions-rw@mtrx-hub-dev-3of.iam.gserviceaccount.com'
  region: 'us-central1'
  cluster: 'compute-cluster'

jobs:

  submit_data_release_periodically:
    runs-on: 
      labels: ubuntu-24.04
    name: Submit the Kedro Pipeline Periodically
    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'
 
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-tags: true
          fetch-depth: 0  # full depth needed so we can pass the AI all logs since the last release.

      - name: Remove unnecessary files
        # remove unnecessary files to free up disk space for building and pushing docker images
        run: |
          # sudo rm -rf \
          #     /usr/local/.ghcup \
          #     /usr/local/lib/android/sdk/ndk \
          #     /usr/share/dotnet \
          #     /opt/ghc \
          #     "/usr/local/share/boost" \
          #     "$AGENT_TOOLSDIRECTORY" && \
          # sudo apt-get clean

          sudo rm -rf \
              /usr/local/.ghcup \
              /usr/local/lib/android/sdk/ndk \
              /opt/ghc \
              "/usr/local/share/boost" \
              "$AGENT_TOOLSDIRECTORY" && \
          sudo apt-get clean

      - name: Check disk space
        run: 
          df -h
      
      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.11'

      # - name: Authenticate with Google Cloud
      #   id: auth
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     project_id: ${{env.project_id}}
      #     workload_identity_provider: ${{env.workload_identity_provider}}
      #     service_account: ${{env.service_account}}
      #     token_format: access_token

      # - uses: google-github-actions/get-gke-credentials@v1 
      # # configure authentication to a GKE cluster (configure kubectl)
      #   with:
      #     cluster_name: ${{env.cluster}}
      #     location: ${{env.region}}
      #     project_id: ${{env.project_id}}

      # - name: Login to Google Artifact Registry 
      # # the docker image is pushed to Google Artifact Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{env.region}}-docker.pkg.dev
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}

      # - name: Fetch latest tag
      #   id: fetch_latest_tag
      #   run: |
      #     latest_tag=$(git tag --list --sort="v:refname" | tail -n 1)
      #     echo "latest_tag=${latest_tag}" >> "$GITHUB_ENV"
      #     echo "Latest tag is ${latest_tag}"

      # - name: Get bump type
      #   run: |
      #     # Check if today is the first day of the month
      #     if [ "$(date +%d)" -eq 1 ]; then
      #       bump_type="minor"
      #       echo "bump_type=${bump_type}" >> "$GITHUB_ENV"
      #     else
      #       bump_type="patch"
      #       echo "bump_type=${bump_type}" >> "$GITHUB_ENV"
      #     fi

      # - name: Bump version
      #   working-directory: docs/scripts
      #   run: |
      #     pip install semver
      #     python bump_version.py

      # - name: Set up kedro project dependencies
      #   working-directory: pipelines/matrix
      #   run: |
      #     curl -sLO https://github.com/argoproj/argo-workflows/releases/latest/download/argo-linux-amd64.gz
      #     gunzip argo-linux-amd64.gz
      #     chmod +x argo-linux-amd64
      #     sudo mv argo-linux-amd64 /usr/local/bin/argo
      #     argo version
      #     pip install -r requirements.txt

      # - name: Submit the kedro pipeline
      #   working-directory: pipelines/matrix
      #   run: |
      #     echo "Submit the kedro pipeline"
      #     kedro submit \
      #       --username GH-Actions-bot \
      #       --namespace argo-workflows \
      #       --run-name auto-kg-release \
      #       --release-version "${{ env.release_version }}" \
      #       --pipeline kg_release \
      #       --headless \
      #       --run-from-gh