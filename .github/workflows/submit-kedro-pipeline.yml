name: Periodically run kedro kg-release

on:
  schedule:
    - cron: '20 14 1 * 2' # At 15:20 CET on the 1st day of the month and on Tuesday.
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor

jobs:

  submit_data_release_periodically:
    runs-on: 
      labels: ubuntu-24.04
    name: Submit the Kedro Pipeline Periodically
    environment: dev
    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'
 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-tags: true
          fetch-depth: 0  # full depth needed so we can pass the AI all logs since the last release.
          submodules: recursive

      - name: Configure Git
        run: |
          git config --global user.email "releasebot@everycure.org"
          git config --global user.name "All of us at Every Cure"
          git config --global push.autosetupremote true

      - name: Remove unnecessary files
        # debug: remove unnecessary files to free up disk space for building and pushing docker images
        # ref: https://github.com/actions/runner-images/issues/2840
        run: |
          sudo rm -rf \
              /usr/local/.ghcup \
              /usr/local/lib/android/sdk/ndk \
              "$AGENT_TOOLSDIRECTORY" && \
          df -h

      - name: Set up Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.11'

      - name: Install Argo & Python dependencies
        working-directory: pipelines/matrix
        run: |
          make install_argo
          make install

      - name: Authenticate with Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          token_format: access_token

      - uses: google-github-actions/get-gke-credentials@v1
      # configure authentication to a GKE cluster (configure kubectl)
        with:
          cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
          location: ${{ vars.REGION }}
          project_id: ${{ vars.PROJECT_ID }}

      - name: Login to Google Artifact Registry 
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Fetch latest tag
        id: fetch_latest_tag
        run: |
          latest_tag=$(git tag --list --sort="v:refname" | tail -n 1)
          echo "latest_tag=${latest_tag}" >> "$GITHUB_ENV"
          echo "Latest tag is ${latest_tag}"

      - name: Get bump type
        run: |
          if [[ "${{ github.event_name == 'schedule' }}" == "true" ]]; then
            # If it's the first of the month, it's a minor bump, even if it's Tuesday. On all other Tuesdays, it's a patch.
            [[ $(date +%-d) -eq 1 ]] && BUMP_TYPE='minor' || BUMP_TYPE='patch'
          else
            BUMP_TYPE="${{ github.event.inputs.bump_type }}"
          fi
          echo "Bump type is ${BUMP_TYPE}"
          echo "BUMP_TYPE=${BUMP_TYPE}" >> "$GITHUB_ENV"

      - name: Increment version
        working-directory: docs/scripts
        run: |
          pip install semver
          python bump_version.py --type="${{env.BUMP_TYPE}}" --tag="${{env.latest_tag}}" >> "$GITHUB_ENV"
          echo "Release version is ${release_version}"

      - name: Branch off
        run: |
          git switch -C release/${{env.release_version}} "${{github.ref_name}}"
          git push
      
      - name: Authenticate with Google Cloud for ID token
        id: id_auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          token_format: id_token
          id_token_audience: ${{ secrets.GCP_ID_TOKEN_AUDIENCE }}
          id_token_include_email: true

      - name: Submit the kedro pipeline
        working-directory: pipelines/matrix
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          GCP_TOKEN: ${{ steps.id_auth.outputs.id_token }}
        run: |
          echo "Submit the kedro pipeline"
          if [ "${{ env.BUMP_TYPE }}" == "minor" ]; then
            RELEASE_PIPELINE='kg_release_and_matrix_run'
          else
            RELEASE_PIPELINE='kg_release_patch_and_matrix_run'
          fi
          uv run kedro experiment run \
            --username GH-Actions-bot \
            --namespace argo-workflows \
            --experiment-name scheduled-kg-release \
            --run-name auto-kg-release-${{ env.release_version }} \
            --release-version "${{ env.release_version }}" \
            --pipeline ${RELEASE_PIPELINE} \
            --headless

  notify_failure:
    # This condition ensures it runs only if any previous job fails
    # we notify on main branches only
    needs: submit_data_release_periodically
    if: failure()
    runs-on: "self-hosted"
    steps:
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C07HU35MKAQ' #github-notifications
          # For posting a simple plain text message
          slack-message: |
            Release pipeline submission failed in GitHub Actions! ðŸš¨

            ðŸš€ Action run link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}