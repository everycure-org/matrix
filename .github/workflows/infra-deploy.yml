name: Infrastructure Deploy

# FUTURE
# This will eventually need to be turned into a call'able workflow_call version where we
# call this for each terragrunt module that should be deployed depending on the path
# changed in the repo or the branch we're on. For now it's hard-coded to `hub/dev`


on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - infra
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths: 
      - .github/workflows/infra-deploy.yml
      - infra/modules/**
      - infra/deployments/**
      - infra/*.tf
      - infra/*.hcl
  push:
    branches:
      - infra

env:
  tf_version: '1.5.7'
  tg_version: '0.58.11'
  working_dir: 'infra/'

jobs:
  checks:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}/deployments
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'
      - name: check terraform files
        run: terraform fmt -check -recursive ${{ env.working_dir }}

  plan:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    environment: dev
    name: Plan Terraform
    needs: [ checks ]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main
      - name: Setup git-crypt
        id: git-crypt
        run: |
          sudo apt-get install git-crypt -y
          echo ${{ secrets.GIT_CRYPT_KEY }} | base64 -d > TMP_KEY
          git-crypt unlock TMP_KEY
          rm -rf TMP_KEY
      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{vars.project_id}}
          workload_identity_provider: ${{vars.workload_identity_provider}}
          service_account: ${{vars.service_account}}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}/deployments/hub/dev
          tg_command: 'plan'

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: dev
    name: Apply Terraform
    needs: [ checks ]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      # FUTURE avoid duplicate boilerplate somehow on checkout/auth/crypt
      - name: 'Checkout'
        uses: actions/checkout@main
      - name: Setup git-crypt
        id: git-crypt
        run: |
          sudo apt-get install git-crypt -y
          echo ${{ secrets.GIT_CRYPT_KEY }} | base64 -d > TMP_KEY
          git-crypt unlock TMP_KEY
          rm -rf TMP_KEY
      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{vars.project_id}}
          workload_identity_provider: ${{vars.workload_identity_provider}}
          service_account: ${{vars.service_account}}

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}/deployments/hub/dev
          tg_command: 'apply'
      
      - name: Post to a Slack channel
        # Only post to Slack if the deployment failed and we're on the main branch
        if: failure() && github.ref == 'refs/heads/main'
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C07HU35MKAQ' #github-notifications
          # For posting a simple plain text message
          slack-message: |
            **🚧 Terraform Deployment Failed! 🚨**
            👩‍💻 Code URL: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}
            🚀 Action run link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}