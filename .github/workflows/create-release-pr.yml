name: Create Pull Request to Verify AI Summary of Release Notes

on:
  push:
    branches:
      - 'feat/trigger-release-from-gh-action'
      - 'debug/release*'
  repository_dispatch:
    types: distribute-release

env:
  project_id: 'mtrx-hub-dev-3of'
  workload_identity_provider: 'projects/938607797672/locations/global/workloadIdentityPools/matrix-pool-rw/providers/matrix-gh-provider-rw'
  service_account: 'sa-github-actions-rw@mtrx-hub-dev-3of.iam.gserviceaccount.com'

jobs:
  create_release_notes_draft:
    runs-on: ubuntu-latest
    name: Create Draft of the Release Notes
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'read'

    steps:
      - name: store variables
        run: |
          if [[ "${{ github.event_name == 'repository_dispatch' }}" == "true" ]]; then
            release=$(echo '${{ toJson(github.event) }}' | jq '.client_payload.release_version')
            gitref=$(echo '${{ toJson(github.event) }}' | jq '.client_payload.git_fingerprint')
          else
            release="debug-dont-release"
            gitref=${{github.ref_name}}
          fi
          echo "release=${release}" >> "$GITHUB_ENV"
          echo "gitref=${gitref}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-tags: true
          fetch-depth: 0  # full depth needed so we can pass the AI all logs since the last release.
          ref: "${{env.gitref}}"

      - name: Tag the commit from which the data release was triggered
        run: git tag --annotate --message '' -- "${{env.release}}"

      - name: Setup Matrix CLI
        working-directory: apps/matrix-cli
        run: |
          # gcloud config list account --format "value(core.account)"  # for debugging: empty on the runner
          pip install uv
          uv sync

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{env.project_id}}
          workload_identity_provider: ${{env.workload_identity_provider}}
          service_account: ${{env.service_account}}

      - name: Create Release Notes
        working-directory: apps/matrix-cli
        env:
          GH_TOKEN: ${{ github.token }}
          POSTS_DIR: ./docs/src/releases/posts
        run: |
          gcloud config list account --format "value(core.account)"
          
          mkdir -p "${{env.release}}"
          echo "foo" > "${{env.release}}/notes.md"
          echo "foobar" > "${{env.release}}/post.md"
          # uv run matrix releases release-notes --headless --output-file "${{env.release}}/notes.md"
          # # sleep because it exceeds the limit
          # # https://cloud.google.com/vertex-ai/generative-ai/docs/quotas
          # # TODO: debug
          # echo "Sleep for 100s"
          # sleep 100
          # echo "Done sleeping"
          # uv run matrix releases article \
          #   --headless \
          #   --output-file "${{env.release}}/post.md" \
          #   --no-disable-rendering \
          #   --notes-file "${{env.release}}/notes.md"
          mv "${{env.release}}" "${GITHUB_WORKSPACE}/${POSTS_DIR}"
          git add "${GITHUB_WORKSPACE}/${POSTS_DIR}/${{env.release}}" && \
          git commit -m "added release notes & article draft" && \
          git push --follow-tags

      - name: Create Pull Request
        run: gh pr create \
          --title "Release/${{env.release}}" \
          --base main \
          --body "Adds the release article and associated notes" \
          --draft \
          --dry-run \
          --label Release