name: Documentation Page Deployment

# FUTURE
# This will eventually need to be turned into a call'able workflow_call version where we
# call this for each terragrunt module that should be deployed depending on the path
# changed in the repo or the branch we're on. For now it's hard-coded to `hub/dev`


on:
  workflow_dispatch: {}
  push:
    branches:
      - main
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
    # from https://github.com/reviewdog/action-eslint/issues/29#issuecomment-985939887
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

defaults:
  run: 
    working-directory: docs/
env:
  # log into gcp
  project_id: 'mtrx-hub-dev-3of'
  workload_identity_provider: 'projects/938607797672/locations/global/workloadIdentityPools/matrix-pool-rw/providers/matrix-gh-provider-rw'
  service_account: 'sa-github-actions-rw@mtrx-hub-dev-3of.iam.gserviceaccount.com'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # leveraging a paths-filter approach to be able to make this run required for all PRs while still
  # not blocking merging with "Expected" for those runs that have a paths filter
  # FUTURE eventually github will likely fix this
  # https://github.com/orgs/community/discussions/26698
  paths_filter:
    if: github.event.pull_request.draft == false || github.ref == 'refs/heads/main'
    runs-on: 'ubuntu-latest'
    permissions: 
      pull-requests: read
      contents: 'read'
    outputs: 
      changed: ${{ steps.changes.outputs.src }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          # required to get full history of docs and thus creation date of files
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - docs/
              - .github/workflows/docs-deploy.yml
  build_and_deploy:
    needs: [paths_filter]
    runs-on: ubuntu-latest
    name: Build Documentation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: actions/checkout@main
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11' 
      # build Docs
      - name: Build Docs
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install uv
          make build #builds the static files in site/

      - uses: 'google-github-actions/auth@v2'
        if: github.ref == 'refs/heads/main'
        with:
          project_id: ${{env.project_id}}
          workload_identity_provider: ${{env.workload_identity_provider}}
          service_account: ${{env.service_account}}
      # To prevent hitting the limit of 210 versions on Google App Engine
      - name: Limit the Number of Versions on Google App Engine
        if: github.ref == 'refs/heads/main'
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # mapfile -t VERSIONS < <(gcloud app versions list --service=default --format="value(version.id)" --sort-by="~version.createTime")
          # echo "Current versions: ${#VERSIONS[@]}"
          # KEEP_VERSIONS=10
          # DELETE_VERSIONS=$((${#VERSIONS[@]} - KEEP_VERSIONS))

          # if [ "$DELETE_VERSIONS" -le 0 ]; then
          #     echo "No versions to delete"
          # else
          #     echo "Deleting $DELETE_VERSIONS versions"
          #     OLD_VERSIONS=("${VERSIONS[@]:$KEEP_VERSIONS}")
          #     echo "Deleting versions: ${OLD_VERSIONS[*]}"
          #     gcloud app versions delete "${OLD_VERSIONS[@]}" --service=default --quiet
          # fi

      # https://github.com/google-github-actions/deploy-appengine
      - id: 'deploy'
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/deploy-appengine@v2'
        with:
          working_directory: docs/ #ignores above setting