name: Create Sample from KG Release

on:
  workflow_dispatch: 
    inputs:
      release_version:
        description: 'Version to deploy in format vX.Y.Z'
        required: true
        type: string
env:
  project_id: 'mtrx-hub-dev-3of'
  workload_identity_provider: 'projects/938607797672/locations/global/workloadIdentityPools/matrix-pool-rw/providers/matrix-gh-provider-rw'
  service_account: 'sa-github-actions-rw@mtrx-hub-dev-3of.iam.gserviceaccount.com'
  region: 'us-central1'
  cluster: 'compute-cluster'
  # release version from input
  RELEASE_VERSION: ${{ inputs.release_version }}

jobs:

  create_sample_release:
    runs-on: 
      labels: ubuntu-24.04
    name: Create Sample from KG Release
    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'
 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0  # full depth needed so we can pass the AI all logs since the last release.
          submodules: recursive
          token: ${{ secrets.PAT }}

      - name: Validate release version
        working-directory: pipelines/matrix
        run: make check_release_version_environment_variable

      - name: Remove unnecessary files
        # debug: remove unnecessary files to free up disk space for building and pushing docker images
        # ref: https://github.com/actions/runner-images/issues/2840
        run: |
          sudo rm -rf \
           /usr/local/.ghcup \
           /usr/local/lib/android/sdk/ndk \
           "$AGENT_TOOLSDIRECTORY" && \
          df -h
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Argo & Python dependencies
        working-directory: pipelines/matrix
        run: |
          make install_argo
          pip install -r requirements.txt

      - name: Authenticate with Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{env.project_id}}
          workload_identity_provider: ${{env.workload_identity_provider}}
          service_account: ${{env.service_account}}
          token_format: access_token

      - uses: google-github-actions/get-gke-credentials@v1
      # configure authentication to a GKE cluster (configure kubectl)
        with:
          cluster_name: ${{env.cluster}}
          location: ${{env.region}}
          project_id: ${{env.project_id}}

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.region}}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Run the kedro sampling pipeline
        working-directory: pipelines/matrix
        run: |
          DATE=$(date +%Y%m%d)
          echo "Run the kedro sampling pipeline"
          kedro experiment run \
            -e sample \
            --experiment-name sample-run \
            -p create_sample \
            --run-name create-sample-release-${DATE} \
            --username github_actions_bot \
            --release-version ${RELEASE_VERSION} \
            --headless \
            --quiet
