apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gha-runner-scale-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  destination:
    namespace: actions-runner-system
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    chart: gha-runner-scale-set
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.12.1
    helm:
      values: |
        controllerServiceAccount:
          name: gha-runner-scale-set-controller-gha-rs-controller
          namespace: actions-runner-system

        githubConfigSecret: gh-creds-for-github-action-runner-set
        githubConfigUrl: https://github.com/everycure-org/

        minRunners: 0
        maxRunners: 50

        template:
          spec:
            # --- Volumes for DinD storage and for installing docker binaries/plugins ---
            volumes:
              - name: dind-storage
                emptyDir: {}
              - name: docker-binaries
                emptyDir: {}
              - name: docker-plugins
                emptyDir: {}

            # --- Init container copies docker CLI + compose plugin into shared vols ---
            initContainers:
              - name: install-docker-cli
                image: docker:27-cli
                command: ["/bin/sh", "-c"]
                args:
                  - |
                    set -eux
                    cp -f /usr/local/bin/docker /opt/bin/
                    mkdir -p /opt/plugins
                    # Compose v2 plugin path in docker:* images:
                    cp -f /usr/libexec/docker/cli-plugins/docker-compose /opt/plugins/
                volumeMounts:
                  - name: docker-binaries
                    mountPath: /opt/bin
                  - name: docker-plugins
                    mountPath: /opt/plugins

            # --- Containers: DinD sidecar + the ARC runner ---
            containers:
              # Docker daemon (no systemd required)
              - name: dind
                image: docker:24-dind
                securityContext:
                  privileged: true
                env:
                  - name: DOCKER_TLS_CERTDIR
                    value: ""                # disable TLS (localhost only)
                args:
                  - --host=tcp://0.0.0.0:2375
                  - --storage-driver=overlay2
                ports:
                  - name: docker
                    containerPort: 2375
                volumeMounts:
                  - name: dind-storage
                    mountPath: /var/lib/docker

              # GitHub Actions runner
              - name: runner
                image: us-central1-docker.pkg.dev/mtrx-hub-dev-3of/github-runner-images/github-runner:latest
                command: ["/home/runner/run.sh"]
                env:
                  - name: DOCKER_HOST
                    value: tcp://localhost:2375
                  # ensure our copied docker binary is on PATH
                  - name: PATH
                    value: /opt/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
                volumeMounts:
                  - name: docker-binaries
                    mountPath: /opt/bin
                    readOnly: true
                  - name: docker-plugins
                    mountPath: /usr/libexec/docker/cli-plugins
                    readOnly: true
                resources:
                  requests:
                    cpu: "3"
                    memory: "10Gi"
                    ephemeral-storage: "40Gi"
                  limits:
                    cpu: "4"
                    memory: "16Gi"
                    ephemeral-storage: "80Gi"

            tolerations:
              - key: "github-runner"
                operator: "Equal"
                value: "true"
                effect: "NoSchedule"
              - key: "spot"
                operator: "Equal"
                value: "true"
                effect: "NoSchedule"

            nodeSelector:
              workload-type: "ci-cd"

  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      allowEmpty: true