apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: litellm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  project: default
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: litellm
  source:
    repoURL: https://github.com/BerriAI/litellm.git
    targetRevision: v1.76.1-stable
    path: deploy/charts/litellm-helm
    helm:
      values: |
        image:
          repository: ghcr.io/berriai/litellm
          tag: main-stable
          pullPolicy: IfNotPresent

        replicaCount: 3

        service:
          type: ClusterIP
          port: 4000

        # Ingress configuration for external load balancer
        ingress:
          enabled: true
          className: "gce"
          annotations:
            kubernetes.io/ingress.global-static-ip-name: "litellm-static-ip-{{ .Values.spec.source.environment }}"
            networking.gke.io/managed-certificates: "litellm-ssl-cert"
            kubernetes.io/ingress.allow-http: "false"
          hosts:
            - host: "litellm.application.{{ .Values.spec.source.environment }}.everycure.org"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: litellm-tls
              hosts:
                - "litellm.application.{{ .Values.spec.source.environment }}.everycure.org"

        resources:
          requests: { cpu: "250m", memory: "512Mi" }
          limits:   { cpu: "1",    memory: "2Gi" }

        # Use environmentSecrets to properly reference Kubernetes secrets
        environmentSecrets:
          - litellm-provider-keys
          # - litellm-db

        proxy_config:
          general_settings:
            telemetry: false
          model_list:
            - model_name: gpt-4o
              litellm_params:
                model: openai/gpt-4o
                api_key: os.environ/OPENAI_API_KEY
              model_info:
                cache: true
            - model_name: claude-3-5-sonnet
              litellm_params:
                model: anthropic/claude-3-5-sonnet-20240620
                api_key: os.environ/ANTHROPIC_API_KEY
              model_info:
                cache: true
          router_settings:
            # Redis for cross-pod RPM/TPM + routing state
            redis_host: redis.redis.svc.cluster.local
            redis_port: 6379
            # redis_password: os.environ/REDIS_PASSWORD   # uncomment if your Redis is authn-enabled
            num_retries: 2
          litellm_settings:
            cache: true
            cache_params:
              type: redis
              host: redis.redis.svc.cluster.local
              port: 6379
              # password: os.environ/REDIS_PASSWORD      # uncomment if your Redis is authn-enabled
              ttl: 3600  # Cache for 1 hour
              namespace: "litellm_cache"
              redis_flush_size: 100
          ui:
            enabled: true
        masterkeySecretName: litellm-master-key
        masterkeySecretKey: LITELLM_MASTER_KEY
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
