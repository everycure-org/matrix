apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "neo4j-password"
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: gcp-store
    kind: ClusterSecretStore
  target:
    name: neo4j-password
    creationPolicy: 'Owner'
    template:
      type: Opaque
      # Use inline templates to construct your desired config file that contains your secret
      data:
        # pretty complex templating needed for helm+Argo+ExternalSecrets. See below
        # https://external-secrets.io/latest/guides/templating/#helm
        NEO4J_AUTH: "{{ `{{ .password }}` }}"

  data:
    - secretKey: password
      remoteRef:
        key: neo4j_password