neo4j-reverse-proxy:
  reverseProxy: 
    serviceName: neo4j-lb-neo4j
    ingress:
      enabled: false
neo4j: # the name of the helm dependency
  # see https://github.com/neo4j/helm-charts/issues/313
  # and https://github.com/neo4j/helm-charts/blob/f19b4f9f18e99442bfdd50a2e67a779d7b56ff3d/neo4j/values.yaml#L11
  disableLookups: true
  neo4j: # config level
    edition: "enterprise"
    passwordFromSecret: neo4j-password
    acceptLicenseAgreement: "yes"
    name: neo4j
    resources:
      cpu: "2" # takes almost full advantage of e2-standard-32 instance
      memory: "8Gi" # takes almost full advantage of e2-standard-32 instance
  # configuration for neo4j services
  # FUTURE do not expose as IP
  services:
    neo4j:
      spec:
        type: LoadBalancer
      # ports:
      #   http:
      #     enabled: false
      #   https:
      #     enabled: false
  # configuration of volumes for neo4j
  volumes:
    data:
      mode: "dynamic"
      dynamic:
        # In GKE;
        # * premium-rwo provisions SSD disks (recommended)
        # * standard-rwo provisions balanced SSD-backed disks
        # * standard provisions HDD disks
        storageClassName: premium-rwo
        # storageClassName: hyperdisk-balanced
        # https://neo4j.com/docs/operations-manual/current/kubernetes/persistent-volumes/#persistent-volumes-types
        requests:
          storage: 1500Gi

  # FUTURE add env variables here to enable plugins for neo4j
  # https://neo4j.com/docs/operations-manual/current/kubernetes/plugins/
  env:
    NEO4J_PLUGINS: '["apoc", "graph-data-science", "apoc-extended"]'
  config:
    # NOTE: This block supports all the configuration options from the config file
    # https://neo4j.com/docs/operations-manual/current/kubernetes/configuration/#_config
    # https://neo4j.com/docs/operations-manual/current/configuration/configuration-settings/
    dbms.security.procedures.unrestricted: "gds.*, apoc.*"
    dbms.security.procedures.whitelist: "gds.*, apoc.*"
    dbms.security.allow_csv_import_from_file_urls: "true"
    # server.directories.import: /var/lib/neo4j/import
    server.default_advertised_address: "neo4j.platform.dev.everycure.org"
    server.bolt.advertised_address: ":443"



  apoc_config:
    apoc.import.file.enabled: "true"
    apoc.export.file.enabled: "true"
    apoc.import.file.use_neo4j_config: "true"

  logging:
    serverLogsXml: |-
      <?xml version="1.0" encoding="UTF-8"?>
      <!-- Example JSON logging configuration -->
      <Configuration status="ERROR" monitorInterval="30" packages="org.neo4j.logging.log4j">
          <Appenders>
              <!-- Default debug.log, please keep -->
              <RollingRandomAccessFile name="DebugLog" fileName="${config:server.directories.logs}/debug.log"
                                       filePattern="$${config:server.directories.logs}/debug.log.%02i">
                  <JsonTemplateLayout eventTemplateUri="classpath:org/neo4j/logging/StructuredLayoutWithMessage.json"/>
                  <Policies>
                      <SizeBasedTriggeringPolicy size="20 MB"/>
                  </Policies>
                  <DefaultRolloverStrategy fileIndex="min" max="7"/>
              </RollingRandomAccessFile>

              <RollingRandomAccessFile name="HttpLog" fileName="${config:server.directories.logs}/http.log"
                                       filePattern="$${config:server.directories.logs}/http.log.%02i">
                  <JsonTemplateLayout eventTemplateUri="classpath:org/neo4j/logging/StructuredLayoutWithMessage.json"/>
                  <Policies>
                      <SizeBasedTriggeringPolicy size="20 MB"/>
                  </Policies>
                  <DefaultRolloverStrategy fileIndex="min" max="5"/>
              </RollingRandomAccessFile>

              <RollingRandomAccessFile name="SecurityLog" fileName="${config:server.directories.logs}/security.log"
                                       filePattern="$${config:server.directories.logs}/security.log.%02i">
                  <JsonTemplateLayout eventTemplateUri="classpath:org/neo4j/logging/StructuredLayoutWithMessage.json"/>
                  <Policies>
                      <SizeBasedTriggeringPolicy size="20 MB"/>
                  </Policies>
                  <DefaultRolloverStrategy fileIndex="min" max="7"/>
              </RollingRandomAccessFile>
          </Appenders>

          <Loggers>
              <!-- Log levels. One of DEBUG, INFO, WARN, ERROR or OFF -->

              <!-- The debug log is used as the root logger to catch everything -->
              <Root level="INFO">
                  <AppenderRef ref="DebugLog"/> <!-- Keep this -->
              </Root>
              <!-- The http request log, must be named "HttpLogger" -->
              <Logger name="HttpLogger" level="INFO" additivity="false">
                  <AppenderRef ref="HttpLog"/>
              </Logger>
              <!-- The security log, must be named "SecurityLogger" -->
              <Logger name="SecurityLogger" level="INFO" additivity="false">
                  <AppenderRef ref="SecurityLog"/>
              </Logger>
              <!-- The query log, must be named "QueryLogger" -->
              <Logger name="QueryLogger" level="OFF" additivity="false">
                  <AppenderRef ref="QueryLog"/>
              </Logger>
          </Loggers>
      </Configuration>
 