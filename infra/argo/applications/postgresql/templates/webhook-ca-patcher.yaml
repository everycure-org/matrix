---
apiVersion: batch/v1
kind: Job
metadata:
  name: patch-webhook-ca-bundle
  namespace: postgresql
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: postgresql-webhook-patcher
      restartPolicy: OnFailure
      containers:
      - name: patch-webhook
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          
          # Get the CA certificate from our ClusterIssuer's CA secret
          CA_BUNDLE=$(kubectl get secret postgresql-ca-secret -n gateway -o jsonpath='{.data.tls\.crt}')
          
          if [ -z "$CA_BUNDLE" ]; then
            echo "Error: Could not retrieve CA bundle from postgresql-ca-secret"
            exit 1
          fi
          
          echo "Patching MutatingWebhookConfiguration with CA bundle..."
          kubectl patch mutatingwebhookconfiguration cnpg-mutating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/0/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch mutatingwebhookconfiguration cnpg-mutating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/1/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch mutatingwebhookconfiguration cnpg-mutating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/2/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch mutatingwebhookconfiguration cnpg-mutating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/3/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          echo "Patching ValidatingWebhookConfiguration with CA bundle..."
          kubectl patch validatingwebhookconfiguration cnpg-validating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/0/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch validatingwebhookconfiguration cnpg-validating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/1/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch validatingwebhookconfiguration cnpg-validating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/2/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch validatingwebhookconfiguration cnpg-validating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/3/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          kubectl patch validatingwebhookconfiguration cnpg-validating-webhook-configuration \
            --type='json' \
            -p="[{\"op\": \"add\", \"path\": \"/webhooks/4/clientConfig/caBundle\", \"value\": \"$CA_BUNDLE\"}]"
          
          echo "Webhook configurations patched successfully"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgresql-webhook-patcher
  namespace: postgresql
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgresql-webhook-patcher
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgresql-webhook-patcher
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgresql-webhook-patcher
subjects:
- kind: ServiceAccount
  name: postgresql-webhook-patcher
  namespace: postgresql
