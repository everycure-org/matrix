# NOTE: Ingress in core namespace necessary for an app to appear in Layer UI under "Services"
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: redpanda-ingress
  namespace: redpanda
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/auth-signin: "https://vouch.fm.layer.quantumblack.com/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
    nginx.ingress.kubernetes.io/auth-url: https://vouch.fm.layer.quantumblack.com/validate
    nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-IdP-IdToken
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Vouch-IdP-IdToken $auth_resp_x_vouch_idp_idtoken;
    nginx.ingress.kubernetes.io/auth-snippet: |
      auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
      auth_request_set $auth_resp_x_vouch_idp_idtoken $upstream_http_x_vouch_idp_idtoken;
    nginx.ingress.kubernetes.io/proxy-body-size: 150m
    layer.quantumblack.com/description: Manage redpanda clusters
    layer.quantumblack.com/name: Redpanda Console
    layer.quantumblack.com/sandboxed: "false"
    layer.quantumblack.com/service_type: redpanda-console
    layer.quantumblack.com/url: https://fm.layer.quantumblack.com/console/
spec:
  rules:
  - host: fm.layer.quantumblack.com
    http:
      paths:
        - path: /console/?(.*)
          pathType: Prefix
          backend:
            service:
              name: redpanda-console
              port:
                number: 8080
