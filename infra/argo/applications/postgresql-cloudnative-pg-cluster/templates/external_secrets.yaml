apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: superuser-secret
  namespace: postgresql
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: gcp-store
    kind: ClusterSecretStore
  target:
    name: superuser-secret
    creationPolicy: 'Owner'
    template:
      type: kubernetes.io/basic-auth
      metadata:
        labels:
          cnpg.io/reload: ""
      data:
        password: "{{ `{{ .postgresql_super_user_db_password }}` }}"
        username: "postgres"
  data:
    - secretKey: postgresql_super_user_db_password
      remoteRef:
        conversionStrategy: Default	
        decodingStrategy: None
        key: postgresql_super_user_db_password
        metadataPolicy: None
##############################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: postgresql-secret-reader
  namespace: postgresql
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: postgresql-secret-access
  namespace: postgresql
subjects:
- kind: ServiceAccount
  name: postgresql-cloudnative-pg-cluster
  namespace: postgresql
roleRef:
  kind: Role
  name: postgresql-secret-reader
  apiGroup: rbac.authorization.k8s.io