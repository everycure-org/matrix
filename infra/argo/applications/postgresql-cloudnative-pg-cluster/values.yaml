type: postgresql
mode: standalone
version:
  postgresql: "17.6"
cluster:
  # PGBouncer configuration
  poolers:
    - name: rw
      type: rw
      instances: 1
      monitoring:
        enabled: true
        podMonitor:
          enabled: true
          relabelings:
            - targetLabel: type
              replacement: rw
      # PGBouncer scheduling configuration
      nodeSelector:
        workload-type: management
      tolerations:
        - key: "workload-type"
          operator: "Equal"
          value: "management"
          effect: "NoSchedule"
    - name: ro
      type: ro
      instances: 1
      monitoring:
        enabled: true
        podMonitor:
          enabled: true
          relabelings:
            - targetLabel: type
              replacement: ro
      # PGBouncer scheduling configuration
      nodeSelector:
        node-type: application
      tolerations:
        - key: "application"
          operator: "Equal"
          value: "pgbouncer"
          effect: "NoSchedule"
  enableSuperuserAccess: true
  superuserSecret: superuser-secret
  logLevel: "debug"
  instances: 2
  monitoring:
    enabled: true
    podMonitor:
      enabled: true
    prometheusRule:
      enabled: true
  resources:
    requests:
      cpu: "250m"
      memory: "256Mi"
  storage:
    storageClass: "premium-rwo"
  walStorage:
    storageClass: "premium-rwo"
    enabled: true
  
  # Node scheduling configuration
  nodeSelector:
    workload-type: management
  tolerations:
    - key: "workload-type"
      operator: "Equal"
      value: "management"
      effect: "NoSchedule"
    
# Backup configuration
backups:
  enabled: true
  data:
    compression: "bzip2"
  endpointCA:
    create: true
  provider: gcs
  google:
    gkeEnvironment: true
    bucket: "everycure-infra-backups"
    path: "/postgresql"
  retentionPolicy: "7d"
  scheduledBackups:
    - name: "daily-backup"
      schedule: "0 2 * * *"
      backupOwnerReference: "self"
      immediate: true
      method: "volumeSnapshot"
  wal:
    compression: "bzip2"
