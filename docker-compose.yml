services:
  # Neo4J database
  neo4j:
    container_name: neo4j
    image: neo4j:latest
    platform: linux/amd64
    restart: always
    ports:
      - 7474:7474
      - 7687:7687
    # https://neo4j.com/docs/operations-manual/current/docker/ref-settings/
    environment:
      - NEO4J_AUTH=neo4j/admin
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_auth__minimum__password__length=4
      - NEO4J_initial_dbms_default__database=everycure
    volumes:
      - ./neo4j_db/data:/data
      - ./neo4j_db/logs:/logs
      - ./neo4j_db/import:/var/lib/neo4j/import
      - ./neo4j_db/plugins:/plugins
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - web

  # Neo4J startup script
  neo4j-start-up:
    image: neo4j:latest
    platform: linux/amd64
    entrypoint: [ '/bin/bash', '-c' ]
    command:
      - |
        set -e
        cypher-shell -a $${NEO4J_ADRESS} -u $${NEO4J_USER} -p $${NEO4J_PASS} -f /tmp/statup-script.cql
        echo "Successfully finished running."
        echo "Keep container alive to prevent exit code from this service."
        tail -F /dev/null
    environment:
      - NEO4J_ADRESS=neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASS=admin
    volumes:
      - ./test.cql:/tmp/statup-script.cql:ro
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - web

networks:
  web:
    name: web
    driver: bridge