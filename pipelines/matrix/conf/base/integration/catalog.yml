_spark_parquet_ds: &_spark_parquet
  type: matrix.datasets.gcp.LazySparkDataset
  file_format: parquet
  load_args:
    header: True
  save_args:
    mode: overwrite

_pandas_parquet: &_pandas_parquet
  type: matrix.datasets.graph.PandasParquetDataset
  save_args:
    engine: pyarrow
  load_args:
    engine: pyarrow

_layer_int: &_layer_int
  metadata:
    kedro-viz:
      layer: integration

_layer_prm: &_layer_prm
  metadata:
    kedro-viz:
      layer: primary

# -------------------------------------------------------------------------
# Datasets
# -------------------------------------------------------------------------

integration.int.{source}.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/nodes

integration.int.{source}.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/edges

# Normalized KGs
integration.int.{source}.nodes.norm@spark:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/nodes.norm

integration.int.{source}.nodes.norm@pandas:
  <<: [*_pandas_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/nodes.norm

integration.int.{source}.edges.norm@spark:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/edges.norm

integration.int.{source}.edges.norm@pandas:
  <<: [*_pandas_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/edges.norm

# HARD-CODED TIME_SPLIT DATASETS
integration.int.drug_list.nodes.norm@spark:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/drug_list/arax_drug_list.parquet

integration.int.drug_list.nodes.norm@pandas:
  <<: [*_pandas_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/drug_list/arax_drug_list.parquet

integration.int.disease_list.nodes.norm@spark:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/disease_list/arax_disease_list.parquet

integration.int.disease_list.nodes.norm@pandas:
  <<: [*_pandas_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/disease_list/arax_disease_list.parquet

integration.int.ground_truth.edges.norm@spark:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/ground_truth/arax_ground_truth_edges.parquet

integration.int.ground_truth.nodes.norm@pandas:
  <<: [*_pandas_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/ground_truth/arax_ground_truth_nodes.parquet

# integration.int.{source}.edges.norm@spark:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.integration}/int/{source}/edges.norm

# integration.int.{source}.edges.norm@pandas:
#   <<: [*_pandas_parquet, *_layer_int]
#   filepath: ${globals:paths.integration}/int/{source}/edges.norm

# mapping tables 
integration.int.{source}.nodes_norm_mapping:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.integration}/int/{source}/nodes_norm_mapping

# Unified KGs
integration.prm.unified_nodes:
  <<: [*_spark_parquet, *_layer_prm]
  filepath: ${globals:paths.integration}/prm/unified/nodes

integration.prm.unified_edges:
  <<: [*_spark_parquet, *_layer_prm]
  filepath: ${globals:paths.integration}/prm/unified/edges

# filtered KGs
integration.prm.filtered_edges:
  <<: [*_spark_parquet, *_layer_prm]
  filepath: ${globals:paths.integration}/prm/filtered/edges/arax_rtx_273_edges.parquet

# FUTURE more elegant: Apply all node filters, then all edge filters, then a "cleanup" final step that removes
# 1. all edges where nodes were deleted
# 2. all nodes that have not one edge connected anymore
integration.prm.prefiltered_nodes:
  <<: [*_spark_parquet, *_layer_prm]
  filepath: ${globals:paths.integration}/prm/prefiltered/nodes

integration.prm.filtered_nodes:
  <<: [*_spark_parquet, *_layer_prm]
  filepath: ${globals:paths.integration}/prm/filtered/nodes/arax_rtx_273_nodes.parquet


# ==============================
# Original sources: only used for sampling

integration.prm.original.filtered_nodes:
  <<: [*_spark_parquet]
  filepath: ${globals:paths.integration}/prm/filtered/nodes
  
integration.prm.original.filtered_edges:
  <<: [*_spark_parquet]
  filepath: ${globals:paths.integration}/prm/filtered/edges