integration:  
  sources:
    rtx_kg2:
      transformer:
        object: matrix.pipelines.integration.rtxkg2.RTXTransformer

    robokop: 
      transformer:
        object: matrix.pipelines.integration.robokop.RobokopTransformer

  # TODO: Improve specifying bucket size
  batch_size: 1000
  
  normalizer:
    object: matrix.pipelines.integration.pipeline.NodeNormNormalizer
    conflate: True
    drug_chemical_conflate: True

  filtering:
    node_filters:
      filter_node_labels:
        object: matrix.pipelines.modelling.utils.partial_
        func:
          object: matrix.pipelines.integration.filters.remove_rows_containing_category
        column: category
        categories:
        # TODO: We should likely not remove these before our data release stage but afterwards in the modelling pipeline (if the model so desires)
          - biolink:Activity
          - biolink:Agent
          - biolink:ClinicalIntervention
          - biolink:Cohort
          - biolink:Device
          - biolink:EnvironmentalFeature
          - biolink:EnvironmentalProcess
          - biolink:Event
          - biolink:GeographicLocation
          - biolink:IndividualOrganism
          - biolink:InformationContentEntity
          - biolink:InformationResource
          - biolink:LifeStage
          - biolink:MaterialSample
          - biolink:NamedThing
          - biolink:Phenomenon
          - biolink:PhysicalEntity
          - biolink:PopulationOfIndividualOrganisms
          - biolink:Procedure
          - biolink:Publication
          - biolink:Treatment
          # If you add anything here make sure the fabricator is not generating it, else we remove it
    
    edge_filters:
      # FUTURE: Ensure the semmed filter is moved here instead
      # preprocessing:
      #   rtx:
      #     semmed_filters:
      #       publication_threshold: 10
      #       ngd_threshold: 0.6
      #       limit_pmids: 50_000_000 # essentially unlimited, but allows for local clipping if local run is desired
      filter_biolink_edges:
        object: matrix.pipelines.modelling.utils.partial_
        func:
          object: matrix.pipelines.integration.filters.biolink_deduplicate_edges