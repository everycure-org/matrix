modelling.xg_ensemble:
    _overrides:
      
      generator:
        _object: matrix.datasets.pair_generator.DegreeAwarePairGenerator
        random_state: ${globals:random_state}
        y_label: 2
        n_replacements: 2

        # NOTE: the following set-up is only using ground truth positive edges from training data for neg sampling
        drug_flags:
          - in_ground_pos
        disease_flags:
          - in_ground_pos
        # To use edges from KG specifically for neg sampling:
        # drug_flags:
        #   - is_drug
        # disease_flags:
        #   - is_disease

        # To use edges which ARE in ground truth positives AND are in KG for neg sampling:
        # drug_flags:
        #   - is_drug
        #   - in_ground_pos
        # disease_flags:
        #   - is_disease
        #   - in_ground_pos

        
      model_tuning_args:
        tuner:
          _object: matrix.pipelines.modelling.tuning.GaussianSearch
          estimator:
            _object: xgboost.XGBClassifier
            n_jobs: 16
            random_state: ${globals:random_state}
            tree_method: hist
            device: cuda
          n_calls: 20
          dimensions:
            - _object: skopt.space.Real
              name: learning_rate
              low: 0.01
              high: 0.5
            - _object: skopt.space.Integer
              name: max_depth
              low: 3
              high: 10
            - _object: skopt.space.Real
              name: lambda
              low: 0
              high: 1
            - _object: skopt.space.Integer
              name: n_estimators
              low: 50
              high: 2500
          scoring: 
              _object: matrix.pipelines.modelling.utils.partial_
              func:
                _object: sklearn.metrics.f1_score
              average: macro
          splitter:
            _object: sklearn.model_selection.StratifiedShuffleSplit
            n_splits: 1 
            test_size: 0.1
            random_state: ${globals:random_state}
        features: # Features use regex, source_0, source_1, .., target_0, target_1
          - source_+
          - target_+
        target_col_name: y
    
    # NOTE: This leverages the custom `merge` resolver to override
    # the base options with the override block above.
    model_options: ${merge:${.._model_options},${._overrides}}