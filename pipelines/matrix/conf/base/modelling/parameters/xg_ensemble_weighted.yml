modelling.xg_ensemble_weighted:
  _overrides:
    generator:
      _object: matrix.datasets.pair_generator.ReplacementDrugDiseasePairGenerator
      random_state: ${globals:random_state}
      y_label: 2
      n_replacements: 2
      drug_flags:
        - is_drug
        - in_ground_pos
      disease_flags:
        - is_disease

    transformers:
      weighting:
        features: ["source"]
        transformer:
          _object: matrix.pipelines.modelling.transformers.WeightingTransformer
          head_col: source
          # inverse / shomer / auto_cv / simple_eta
          strategy: shomer
          enabled: true
          eta: 40
          mix_k: 5
          mix_beta: 1.0
          eps: 1.0e-6
          w_min: 1.0e-3
          w_max: 20.0
          per_class: True
          pos_label: 1
          normalize: "per_class"
      flat_source_embedding:
        transformer:
          _object: matrix.pipelines.modelling.transformers.FlatArrayTransformer
          prefix: source_
        features:
          - source_embedding # becomes n columns, named source_0, source_1, etc
      flat_target_embedding:
        transformer:
          _object: matrix.pipelines.modelling.transformers.FlatArrayTransformer
          prefix: target_
        features:
          - target_embedding # becomes n columns, named target_0, target_1, etc

    model_tuning_args:
      tuner:
        _object: matrix.pipelines.modelling.tuning.GaussianSearch
        estimator:
          _object: matrix.pipelines.modelling.model.XGBClassifierWeighted
          n_jobs: 16
          random_state: ${globals:random_state}
          tree_method: hist
          device: cuda
        n_calls: 20
        dimensions:
          - _object: skopt.space.Real
            name: learning_rate
            low: 0.01
            high: 0.5
          - _object: skopt.space.Integer
            name: max_depth
            low: 3
            high: 10
          - _object: skopt.space.Real
            name: lambda
            low: 0
            high: 1
          - _object: skopt.space.Integer
            name: n_estimators
            low: 50
            high: 2500
        scoring:
          _object: matrix.pipelines.modelling.utils.partial_
          func:
            _object: sklearn.metrics.f1_score
          average: macro
        splitter:
          _object: sklearn.model_selection.StratifiedShuffleSplit
          n_splits: 1
          test_size: 0.1
          random_state: ${globals:random_state}
      features: # Features use regex, source_0, source_1, .., target_0, target_1
        - source_+
        - target_+
      target_col_name: y
  # NOTE: This leverages the custom `merge` resolver to override
  # the base options with the override block above.
  model_options: ${merge:${.._model_options},${._overrides}}
