_pandas_csv: &_pandas_csv
  type:  pandas.CSVDataset

_spark_parquet_ds: &_spark_parquet
  type: matrix.datasets.gcp.LazySparkDataset
  file_format: parquet
  save_args:
    mode: overwrite

_spark_csv: &_spark_csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
  save_args:
    mode: overwrite

_layer_raw: &_layer_raw
  metadata:
    kedro-viz:
      layer: raw

_layer_int: &_layer_int
  metadata:
    kedro-viz:
      layer: integration

# -------------------------------------------------------------------------
# RTX-KG2
# -------------------------------------------------------------------------  

ingestion.raw.rtx_kg2.curie_to_pmids@pandas:
  type: pandas.SQLTableDataset
  table_name: curie_to_pmids  
  credentials: sqlite_credentials
  save_args:
    if_exists: replace

ingestion.raw.rtx_kg2.curie_to_pmids@spark:
  type: matrix.datasets.gcp.RemoteSparkJDBCDataset
  project: ${oc.env:GCP_PROJECT_ID}
  table: curie_to_pmids
  url: sqlite:${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx_kg2.version}/curie_to_pmids.sqlite
  load_args:
    properties:
      driver: org.sqlite.JDBC

ingestion.raw.rtx_kg2.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx_kg2.version}/nodes_c.tsv
  load_args:
    sep: "\t"
  save_args:
    header: true
    index: false
    sep: "\t"

ingestion.raw.rtx_kg2.nodes@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx_kg2.version}/nodes_c.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true

ingestion.raw.rtx_kg2.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx_kg2.version}/edges_c.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.rtx_kg2.edges@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx_kg2.version}/edges_c.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
  save_args:
    header: true

ingestion.int.rtx_kg2.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/rtx_kg2/${globals:data_sources.rtx_kg2.version}/nodes

ingestion.int.rtx_kg2.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/rtx_kg2/${globals:data_sources.rtx_kg2.version}/edges

ingestion.int.rtx_kg2.curie_to_pmids:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/rtx_kg2/${globals:data_sources.rtx_kg2.version}/curie_to_pmids

# -------------------------------------------------------------------------
# EveryCure Medical
# -------------------------------------------------------------------------  
# TODO: Remove raw suffix from all outputs of preprocessing pipeline once its in main
ingestion.raw.ec_medical_team.nodes@pandas:
  <<: [*_layer_raw, *_pandas_csv]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/nodes_conflated_raw.csv

ingestion.raw.ec_medical_team.nodes@spark:
  <<: [*_spark_csv, *_layer_raw]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/nodes_conflated_raw.csv
  save_args:
    mode: overwrite
    header: True
  load_args:
    header: True

ingestion.raw.ec_medical_team.edges@pandas:
  <<: [ *_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/edges_conflated_raw.csv

ingestion.raw.ec_medical_team.edges@spark:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/edges_conflated_raw.csv
  save_args:
    mode: overwrite
    header: True
  load_args:
    header: True

ingestion.int.ec_medical_team.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/nodes_conflated_raw

ingestion.int.ec_medical_team.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/ec_medical_team/translator/${globals:data_sources.ec_medical_team.version}/edges_conflated_raw


# -------------------------------------------------------------------------
# EveryCure Clinical trails
# ------------------------------------------------------------------------- 

ingestion.raw.ec_clinical_trails.nodes@pandas:
  <<: [*_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/nodes_raw.tsv

ingestion.raw.ec_clinical_trails.nodes@spark:
  <<: [*_layer_int, *_spark_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/nodes_raw.tsv

ingestion.raw.ec_clinical_trails.edges@pandas:
  <<: [*_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/edges_raw.tsv

ingestion.raw.ec_clinical_trails.edges@spark:
  <<: [*_layer_int, *_spark_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/edges_raw.tsv

ingestion.int.ec_clinical_trails.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/nodes_conflated_raw

ingestion.int.ec_clinical_trails.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/clinical_trials_data/translator/${globals:data_sources.ec_clinical_trials.version}/edges_conflated_raw


# -------------------------------------------------------------------------
# DrugMech
# -------------------------------------------------------------------------  

ingestion.raw.drugmech.edges@pandas:
  type: json.JSONDataset
  filepath: ${globals:paths.raw}/drugmech/${globals:data_sources.drugmech.version}/indication_paths.json

# ingestion.raw.drugmech.edges@spark:
#   type: matrix.datasets.gcp.LazySparkDataset
#   filepath: https://raw.githubusercontent.com/SuLab/DrugMechDB/refs/tags/${globals:data_sources.drugmech.version}/indication_paths.json
#   file_format: json
#   load_args:
#     multiline: true

# ingestion.int.drugmech.edges:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.ingestion}/drugmech/${globals:data_sources.drugmech.version}/edges

# -------------------------------------------------------------------------
# Drug and disease lists
# -------------------------------------------------------------------------  

ingestion.raw.disease_list:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseCSVDataset
  repository_url: https://github.com/everycure-org/matrix-disease-list
  release_name: ${globals:data_sources.disease_list.version}
  release_asset_name: matrix-disease-list-unfiltered-processed.tsv
  fs_args:
    Accept: application/octet-stream
  load_args:
    sep: "\t"

ingestion.raw.disease_list.nodes@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/disease_list/translator/${globals:data_sources.disease_list.version}/raw_disease_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.disease_list.nodes@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/disease_list/translator/${globals:data_sources.disease_list.version}/raw_disease_list_conflated.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
     sep: "\t"
     header: true
     index: false

ingestion.raw.drug_list:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseCSVDataset
  repository_url: https://github.com/everycure-org/matrix-drug-list
  release_name: ${globals:data_sources.drug_list.version}
  release_asset_name: drugList.tsv
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${globals:gh_token}
  load_args:
    sep: "\t"

ingestion.raw.drug_list.nodes@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/drug_list/translator/${globals:data_sources.drug_list.version}/raw_drug_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.drug_list.nodes@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/drug_list/translator/${globals:data_sources.drug_list.version}/raw_drug_list_conflated.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
     sep: "\t"
     header: true
     index: false

ingestion.int.drug_list.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/drug_list/translator/${globals:data_sources.drug_list.version}/drug_list_conflated

ingestion.int.disease_list.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/disease_list/translator/${globals:data_sources.disease_list.version}/disease_list_conflated

# -------------------------------------------------------------------------
# KGML-xdtd Ground truth
# -------------------------------------------------------------------------  
# TODO: Remove raw suffix from all outputs of preprocessing pipeline once its in main
ingestion.raw.kgml_xdtd_ground_truth.positives:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.kg_raw}/ground_truth/kg2/${globals:data_sources.kgml_xdtd_gt.version}/tp_pairs.txt
  load_args:
    sep: "\t"
  save_args:
    sep: "\t"

ingestion.raw.kgml_xdtd_ground_truth.negatives:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.kg_raw}/ground_truth/kg2/${globals:data_sources.kgml_xdtd_gt.version}/tn_pairs.txt
  load_args:
    sep: "\t"
  save_args:
    sep: "\t"

ingestion.raw.kgml_xdtd_ground_truth.positive.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/translator/${globals:data_sources.kgml_xdtd_gt.version}/tp_pairs_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.kgml_xdtd_ground_truth.negative.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/translator/${globals:data_sources.kgml_xdtd_gt.version}/tn_pairs_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.kgml_xdtd_ground_truth.positive.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/translator/${globals:data_sources.kgml_xdtd_gt.version}/tp_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.kgml_xdtd_ground_truth.negative.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/translator/${globals:data_sources.kgml_xdtd_gt.version}/tn_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.int.kgml_xdtd_ground_truth.positive.edges:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/kg2/${globals:data_sources.kgml_xdtd_gt.version}/tp_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite

ingestion.int.kgml_xdtd_ground_truth.negative.edges:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.ingestion}/kgml_xdtd_ground_truth/kg2/${globals:data_sources.kgml_xdtd_gt.version}/tn_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite

# -------------------------------------------------------------------------
# Ground truth EC
# -------------------------------------------------------------------------  

ingestion.raw.ec_ground_truth.positives:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseExcelDataset
  repository_url: https://github.com/everycure-org/matrix-indication-list
  release_name: ${globals:data_sources.ec_gt.version}
  release_asset_name: indicationList.xlsx
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${globals:gh_token}
  # load_args:
  #   sep: "\t"

ingestion.raw.ec_ground_truth.negatives:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseExcelDataset
  repository_url: https://github.com/everycure-org/matrix-indication-list
  release_name: ${globals:data_sources.ec_gt.version}
  release_asset_name: contraindicationList.xlsx
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${globals:gh_token}
  # load_args:
  #   sep: "\t"

ingestion.raw.ec_ground_truth.negative.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.ec_ground_truth.negative.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.ec_ground_truth.positive.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.ec_ground_truth.positive.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.int.ec_ground_truth.negative.edges:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite
  

ingestion.int.ec_ground_truth.positive.edges:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite
  
# -------------------------------------------------------------------------
# Ground truth EC downfilled
# -------------------------------------------------------------------------
ingestion.raw.ec_ground_truth_downfilled.positives:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseExcelDataset
  repository_url: https://github.com/everycure-org/matrix-indication-list
  release_name: ${globals:data_sources.ec_gt.version}
  release_asset_name: indicationList_downfilled.xlsx
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${globals:gh_token}
  # load_args:
  #   sep: "\t"

ingestion.raw.ec_ground_truth_downfilled.negatives:
  <<: [*_layer_raw]
  type: matrix.datasets.github.GitHubReleaseExcelDataset
  repository_url: https://github.com/everycure-org/matrix-indication-list
  release_name: ${globals:data_sources.ec_gt.version}
  release_asset_name: contraindicationList_downfilled.xlsx
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${globals:gh_token}
  # load_args:
  #   sep: "\t"

ingestion.raw.ec_ground_truth_downfilled.negative.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs_downfilled_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.ec_ground_truth_downfilled.positive.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs_downfilled_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.ec_ground_truth_downfilled.negative.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs_downfilled_raw.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.ec_ground_truth_downfilled.positive.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs_downfilled_raw.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.int.ec_ground_truth_downfilled.negative.edges:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tn_pairs_downfilled.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite
  
ingestion.int.ec_ground_truth_downfilled.positive.edges:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.ingestion}/ground_truth/ec/${globals:data_sources.ec_gt.version}/tp_pairs_downfilled.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite

# -------------------------------------------------------------------------
# Robokop
# -------------------------------------------------------------------------  
ingestion.raw.robokop.nodes@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/nodes.orig.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.robokop.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/nodes.orig.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.robokop.edges@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/edges.orig.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.robokop.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/edges.orig.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.int.robokop.nodes:
   <<: [*_spark_parquet, *_layer_int]
   filepath: ${globals:paths.ingestion}/int/robokop-kg/${globals:data_sources.robokop.version}/nodes

ingestion.int.robokop.edges:
   <<: [*_spark_parquet, *_layer_int]
   filepath: ${globals:paths.ingestion}/int/robokop-kg/${globals:data_sources.robokop.version}/edges

# -------------------------------------------------------------------------
# SPOKE
# -------------------------------------------------------------------------
# ingestion.raw.spoke.nodes@spark:
#   <<: *_layer_raw
#   type: matrix.datasets.gcp.LazySparkDataset
#   filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/nodes.tsv
#   file_format: csv
#   load_args:
#     sep: "\t"
#     header: true
#     index: false

ingestion.raw.spoke.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/nodes.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

# ingestion.raw.spoke.edges@spark:
#   <<: *_layer_raw
#   type: matrix.datasets.gcp.LazySparkDataset
#   filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/edges.tsv
#   file_format: csv
#   load_args:
#     sep: "\t"
#     header: true
#     index: false

ingestion.raw.spoke.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/edges.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

# ingestion.int.spoke.nodes:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.ingestion}/int/spoke/${globals:data_sources.spoke.version}/nodes

# ingestion.int.spoke.edges:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.ingestion}/int/spoke/${globals:data_sources.spoke.version}/edges