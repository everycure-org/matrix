_pandas_csv: &_pandas_csv
  type:  pandas.CSVDataset

_spark_parquet_ds: &_spark_parquet
  type: matrix.datasets.gcp.LazySparkDataset
  file_format: parquet
  save_args:
    mode: overwrite

_spark_csv: &_spark_csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
  save_args:
    mode: overwrite

_layer_raw: &_layer_raw
  metadata:
    kedro-viz:
      layer: raw

_layer_int: &_layer_int
  metadata:
    kedro-viz:
      layer: integration


# -------------------------------------------------------------------------
# RTX-KG2
# -------------------------------------------------------------------------  

ingestion.raw.rtx_kg2.curie_to_pmids@spark:
  type: matrix.datasets.gcp.RemoteSparkJDBCDataset
  project: ${globals:gcp_project}
  table: curie_to_pmids
  url: sqlite:${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/curie_to_pmids.sqlite
  load_args:
    properties:
      driver: org.sqlite.JDBC

ingestion.raw.rtx_kg2.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/nodes_c.tsv
  load_args:
    sep: "\t"
  save_args:
    header: true
    index: false
    sep: "\t"

ingestion.raw.rtx_kg2.nodes@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/nodes_c.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true

ingestion.raw.rtx_kg2.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/edges_c.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.rtx_kg2.edges@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/edges_c.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
  save_args:
    header: true

ingestion.int.rtx_kg2.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/rtx_kg2/${globals:data_sources.rtx-kg2.version}/nodes

ingestion.int.rtx_kg2.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/rtx_kg2/${globals:data_sources.rtx-kg2.version}/edges

ingestion.int.rtx_kg2.curie_to_pmids:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.kg_raw}/KGs/rtx_kg2/${globals:data_sources.rtx-kg2.version}/curie_to_pmids

# -------------------------------------------------------------------------
# EveryCure Medical
# -------------------------------------------------------------------------  
ingestion.raw.ec_medical_team.nodes@pandas:
  <<: [*_layer_raw, *_pandas_csv]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/nodes_conflated.csv

ingestion.raw.ec_medical_team.nodes@spark:
  <<: [*_spark_csv, *_layer_raw]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/nodes_conflated.csv
  save_args:
    mode: overwrite
    header: True
  load_args:
    header: True

ingestion.raw.ec_medical_team.edges@pandas:
  <<: [ *_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/edges_conflated.csv

ingestion.raw.ec_medical_team.edges@spark:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.raw}/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/edges_conflated.csv
  save_args:
    mode: overwrite
    header: True
  load_args:
    header: True


ingestion.int.ec_medical_team.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/nodes_conflated

ingestion.int.ec_medical_team.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/ec_medical_team/translator/${globals:data_sources.ec-medical-team.version}/edges_conflated


# -------------------------------------------------------------------------
# EveryCure Clinical trails
# ------------------------------------------------------------------------- 

ingestion.raw.ec_clinical_trails.nodes@pandas:
  <<: [*_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.clinical-trial-data.version}/nodes.tsv

ingestion.raw.ec_clinical_trails.nodes@spark:
  <<: [*_layer_int, *_spark_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.clinical-trial-data.version}/nodes.tsv

ingestion.raw.ec_clinical_trails.edges@pandas:
  <<: [*_layer_int, *_pandas_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.clinical-trial-data.version}/edges.tsv

ingestion.raw.ec_clinical_trails.edges@spark:
  <<: [*_layer_int, *_spark_csv]
  filepath: ${globals:paths.raw}/clinical_trials_data/translator/${globals:data_sources.clinical-trial-data.version}/edges.tsv

ingestion.int.ec_clinical_trails.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/clinical_trials_data/translator/${globals:data_sources.ec-medical-team.version}/nodes_conflated

ingestion.int.ec_clinical_trails.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/clinical_trials_data/translator/${globals:data_sources.ec-medical-team.version}/edges_conflated



# -------------------------------------------------------------------------
# Drug and disease lists
# -------------------------------------------------------------------------  
ingestion.raw.disease_list.nodes:
  <<: [*_layer_raw, *_pandas_csv]  # Changed to include pandas_csv anchor
  filepath: ${globals:paths.raw}/disease_list/translator/${globals:data_sources.ec-disease-list.version}/disease_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.disease_list.nodes@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.raw}/disease_list/translator/${globals:data_sources.ec-disease-list.version}/disease_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.disease_list.nodes@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.raw}/disease_list/translator/${globals:data_sources.ec-disease-list.version}/disease_list_conflated.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.drug_list.nodes:
  <<: [*_layer_raw, *_pandas_csv]  # Changed to include pandas_csv anchor
  filepath: ${globals:paths.raw}/drug_list/translator/${globals:data_sources.ec-drug-list.version}/drug_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.drug_list.nodes@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.raw}/drug_list/translator/${globals:data_sources.ec-drug-list.version}/drug_list_conflated.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.drug_list.nodes@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.raw}/drug_list/translator/${globals:data_sources.ec-drug-list.version}/drug_list_conflated.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.int.drug_list.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/drug_list/translator/${globals:data_sources.ec-drug-list.version}/drug_list_conflated

ingestion.int.disease_list.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/disease_list/translator/${globals:data_sources.ec-disease-list.version}/disease_list_conflated

# -------------------------------------------------------------------------
# Ground truth
# -------------------------------------------------------------------------  

ingestion.raw.ground_truth.nodes@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.raw}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_ids.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.ground_truth.nodes@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.raw}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_ids.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.ground_truth.edges@pandas:
  <<: [*_layer_raw]
  type: pandas.CSVDataset
  filepath: ${globals:paths.raw}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_pairs.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.ground_truth.edges@spark:
  <<: [*_layer_raw, *_spark_csv]
  filepath: ${globals:paths.raw}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_pairs.tsv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.int.ground_truth.nodes:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.ingestion}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_ids.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite

ingestion.int.ground_truth.edges:
  <<: [*_spark_csv, *_layer_int]
  filepath: ${globals:paths.ingestion}/ground_truth/translator/${globals:data_sources.ec-disease-list.version}/gt_pairs.tsv
  load_args:
    sep: "\t"
    header: true
    index: false
  save_args:
    sep: "\t"
    header: true
    index: false
    mode: overwrite

# -------------------------------------------------------------------------
# Robokop
# -------------------------------------------------------------------------  
ingestion.raw.robokop.nodes@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/nodes.orig.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.robokop.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/nodes.orig.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.robokop.edges@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/edges.orig.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.robokop.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/robokop-kg/${globals:data_sources.robokop.version}/edges.orig.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.int.robokop.nodes:
   <<: [*_spark_parquet, *_layer_int]
   filepath: ${globals:paths.ingestion}/int/robokop-kg/${globals:data_sources.robokop.version}/nodes

ingestion.int.robokop.edges:
   <<: [*_spark_parquet, *_layer_int]
   filepath: ${globals:paths.ingestion}/int/robokop-kg/${globals:data_sources.robokop.version}/edges

# -------------------------------------------------------------------------
# SPOKE
# -------------------------------------------------------------------------
ingestion.raw.spoke.nodes@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/nodes.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.spoke.nodes@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/nodes.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.raw.spoke.edges@spark:
  <<: *_layer_raw
  type: matrix.datasets.gcp.LazySparkDataset
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/edges.tsv
  file_format: csv
  load_args:
    sep: "\t"
    header: true
    index: false

ingestion.raw.spoke.edges@pandas:
  <<: [*_pandas_csv, *_layer_raw]
  filepath: ${globals:paths.kg_raw}/KGs/spoke/${globals:data_sources.spoke.version}/edges.tsv
  save_args:
    sep: "\t"
    header: true
    index: false
  load_args:
    sep: "\t"

ingestion.int.spoke.nodes:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/spoke/${globals:data_sources.spoke.version}/nodes

ingestion.int.spoke.edges:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.ingestion}/int/spoke/${globals:data_sources.spoke.version}/edges

