_spark_parquet_ds: &_spark_parquet
  type: spark.SparkDataset
  file_format: parquet
  save_args:
    mode: overwrite

_neo4j_ds: &_neo4j_ds
  type: matrix.datasets.neo4j.Neo4JSparkDataset
  database: everycure
  url: ${oc.env:NEO4J_HOST,bolt://127.0.0.1:7687}
  credentials: neo4j_credentials
  save_args:
    mode: "overwrite"


# https://neo4j.com/labs/apoc/5/ml/vertexai/#_generate_embeddings_api
embeddings.prm.graph.embeddings:
  <<: *_neo4j_ds
  save_args:
    query: > 
      MATCH (n:Entity {id: event.id})
      WITH event, n
      CALL apoc.ml.vertexai.embedding([event.input], event.token, event.project) YIELD index, text, embedding
      CALL apoc.create.setProperty(n, "embedding", embedding) YIELD node
      RETURN node
  load_args:
    query: >
      MATCH (n: Entity) RETURN n.id as id, n.embedding as embedding


embeddings.prm.graph.pca_embeddings:
  <<: *_neo4j_ds
  save_args:
    query: > 
      MATCH (n:Entity {id: event.id})
      WITH event, n
      CALL apoc.create.setProperty(n, "pca_embedding", event.pca_embedding) YIELD node
      RETURN node
  load_args:
    query: >
      MATCH (n: Entity) RETURN n.id as id, n.pca_embedding as embedding