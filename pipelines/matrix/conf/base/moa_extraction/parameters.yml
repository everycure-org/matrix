moa_extraction:
  # Note: We need to use the same database name as is set in catalog.yml
  gdb_two_hop: 
    object: matrix.pipelines.moa_extraction.utils.GraphDB
    endpoint: ${globals:neo4j.host}
    auth:
      -  ${globals:neo4j.user}
      -  ${globals:neo4j.password}
    database: analytics-two-hop
  gdb_three_hop:
    object: matrix.pipelines.moa_extraction.utils.GraphDB
    endpoint: ${globals:neo4j.host}
    auth:
      -  ${globals:neo4j.user}
      -  ${globals:neo4j.password}
    database: analytics-three-hop

  tagging_options:
    drug_types:
      - "`biolink:Drug`"
      - "`biolink:SmallMolecule`"
      - "`biolink:ChemicalEntity`"
    disease_types:
      - "`biolink:Disease`"
      - "`biolink:PhenotypicFeature`"
      - "`biolink:BehavioralFeature`"
      - "`biolink:DiseaseOrPhenotypicFeature`"
    batch_size: 100000
    verbose: True
  
  path_mapping:
    mapper_two_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 2
      unidirectional: false
    mapper_three_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 3
      unidirectional: false
    # synonymizer_endpoint: http://localhost:8081

  splits:
    splitter_two_hop:
      object: matrix.pipelines.moa_extraction.model_selection.GroupAwareSplit
      group_by_column: source_id
      test_size: 0.4
      random_state: ${globals:random_state}
    splitter_three_hop:
      object: matrix.pipelines.moa_extraction.model_selection.GroupAwareSplit
      group_by_column: source_id
      test_size: 0.4
      random_state: ${globals:random_state}
