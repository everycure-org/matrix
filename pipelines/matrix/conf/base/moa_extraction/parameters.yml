moa_extraction:
  neo4j_runner: 
    object: matrix.pipelines.moa_extraction.nodes.Neo4jRunner
    uri: "bolt://localhost:7687"
    database: "everycure-run-23-aug-setup-4"
    user: "neo4j"
    password: "admin"

  tagging_options:
    drug_types:
      - Drug
      - SmallMolecule
      - ChemicalEntity
    disease_types:
      - Disease
      - PhenotypicFeature
      - BehavioralFeature
      - DiseaseOrPhenotypicFeature
    batch_size: 1000000
    verbose: True
  
  path_mapping:
    mapper_two_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 2
      unidirectional: false
      max_entries: None # For testing purposes only
    mapper_three_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 3
      unidirectional: false
      max_entries: None # For testing purposes only
    synonymizer_endpoint: http://localhost:8081

  splits:
    splitter_two_hop:
      object: matrix.pipelines.modelling.model_selection.GroupAwareSplit
      group_by_column: source_id
      test_size: 0.4
      random_state: ${globals:random_state}
    splitter_three_hop:
      object: matrix.pipelines.modelling.model_selection.GroupAwareSplit
      group_by_column: "source_id"
      test_size: 0.4
      random_state: ${globals:random_state}

  path_embeddings:
    strategy:
      object: matrix.pipelines.moa_extraction.path_embeddings.TwoDimensionalTypesAndRelations
      is_embed_directions: true
 
  training:
    two_hop:
      model:
        object: skorch.NeuralNetClassifier
        module: 
          object: matrix.pipelines.moa_extraction.models.TransformerBinaryClassifier
          token_dim: 100
          num_heads: 4
          num_layers: 2
          dropout: 0.1
        criterion:
          object: torch.nn.BCEWithLogitsLoss
        optimizer__weight_decay: 0.01
        max_epochs: 20
        lr: 0.01
        device: 'cpu'
      negative_samplers:
        - object: matrix.pipelines.moa_extraction.path_generators.ReplacementPathSampler
          num_replacement_paths: 1
          unidirectional: &unidirectional False
          random_state: ${globals:random_state}
    three_hop:
      model:
        object: skorch.NeuralNetClassifier
        module: 
          object: matrix.pipelines.moa_extraction.models.TransformerBinaryClassifier
          token_dim: 100
          num_heads: 4
          num_layers: 3
          dropout: 0.1
        criterion:
          object: torch.nn.BCEWithLogitsLoss
        optimizer__weight_decay: 0.01
        max_epochs: 20
        lr: 0.01
        device: 'cpu'
      negative_samplers:
        - object: matrix.pipelines.moa_extraction.path_generators.ReplacementPathSampler
          num_replacement_paths: 1
          unidirectional: *unidirectional
          random_state: ${globals:random_state}

  evaluation:
    two_hop:
      path_generator:
        object: matrix.pipelines.moa_extraction.path_generators.AllPathsWithTagRules
        tag_rules:
          all: ['drug_disease']
          2: ['disease_disease']
        num_hops: 2
        unidirectional: *unidirectional
        num_limit: None # For testing purposes only
      k_lst: [5, 25]
    three_hop:
      path_generator:
        object: matrix.pipelines.moa_extraction.path_generators.AllPathsWithTagRules
        tag_rules:
          all: ['drug_disease']
          3: ['disease_disease']
        num_hops: 3
        unidirectional: *unidirectional
        num_limit: None # For testing purposes only
      k_lst: [5, 25]

  predictions:
    num_pairs_limit: None # For testing purposes only
    num_paths_per_pair_limit: 1000
    include_edge_directions: true
    drug_col_name: drug_id
    disease_col_name: disease_id
