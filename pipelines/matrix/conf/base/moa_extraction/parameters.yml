moa_extraction:
  neo4j_runner: 
    object: matrix.pipelines.moa_extraction.neo4j_runners.LocalNeo4jRunner
    uri: "bolt://localhost:7687"
    database: "everycure-run-23-aug-setup-4"
    user: "neo4j"
    password: "admin"

  tagging_options:
    drug_types:
      - Drug
      - SmallMolecule
      - ChemicalEntity
    disease_types:
      - Disease
      - PhenotypicFeature
      - BehavioralFeature
      - DiseaseOrPhenotypicFeature
    batch_size: 1000000
    verbose: True
  
  path_mapping:
    mapper_two_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 2
      unidirectional: false
      max_entries: 10 # For testing purposes only
    mapper_three_hop: 
      object: matrix.pipelines.moa_extraction.path_mapping.SetwisePathMapper
      num_hops: 3
      unidirectional: false
      max_entries: 10 # For testing purposes only
    synonymizer_endpoint: http://localhost:8081

  splits:
    splitter_two_hop:
      object: matrix.pipelines.modelling.model_selection.GroupAwareSplit
      group_by_column: "source_id"
      test_size: 0.4
      random_state: ${globals:random_state}
    splitter_three_hop:
      object: matrix.pipelines.modelling.model_selection.GroupAwareSplit
      group_by_column: "source_id"
      test_size: 0.4
      random_state: ${globals:random_state}

  path_embeddings:
    strategy:
      object: matrix.pipelines.moa_extraction.path_embeddings.TwoDimensionalTypesAndRelations
      is_embed_directions: true
 
  training:
    two_hop:
      model:
        object: skorch.NeuralNetClassifier
        module: matrix.pipelines.moa_extraction.pytorch_model.TransformerBinaryClassifier
        module__token_dim: 100
        module__num_heads: 4
        module__num_layers: 2
        module__dropout: 0.1
        max_epochs: 10
        lr: 0.01
        device: cuda
      negative_samplers:
        - object: matrix.pipelines.moa_extraction.negative_path_samplers.ReplacementPathSampler
          num_replacement_paths: 1
          unidirectional: false
          random_state: ${globals:random_state}
    three_hop:
      model:
        object: skorch.NeuralNetClassifier
        module: matrix.pipelines.moa_extraction.pytorch_model.TransformerBinaryClassifier
        module__token_dim: 100
        module__num_heads: 4
        module__num_layers: 2
        module__dropout: 0.1
        max_epochs: 10
        lr: 0.01
        device: cuda
      negative_samplers:
        - object: matrix.pipelines.moa_extraction.negative_path_samplers.ReplacementPathSampler
          num_replacement_paths: 1
          unidirectional: false
          random_state: ${globals:random_state}