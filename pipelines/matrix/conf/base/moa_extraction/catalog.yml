_kg_paths_dataset: &_kg_paths_dataset
  type: matrix.datasets.paths.KGPathsDataset
  load_args:
    engine: pyarrow

# Raw datasets

moa_extraction.raw.drug_mech_db:
  type: yaml.YAMLDataset
  filepath: ${globals:paths.raw}/moa_extraction/drugmechdb/${globals:data_sources.drugmechdb.version}/indication_paths.yaml
  
moa_extraction.raw.pairs_for_moa_prediction:
  type: pandas.CSVDataset
  filepath: ${globals:paths.raw}/moa_extraction/input_pairs/${globals:data_sources.pairs_for_moa_prediction.version}/filtered_matrix_report_xg_ensemble_report_17_sept_2024.csv

moa_extraction.raw.drugmechdb_entities:
  type: pandas.ParquetDataset
  filepath: ${globals:paths.raw}/moa_extraction/drugmechdb_entities/translator/drugmechdb_entities.parquet

# Neo4j databases

"moa_extraction.input_nodes.{num_hops}_hop":
  type: matrix.datasets.neo4j.Neo4JSparkDataset
  database: analytics-{num_hops}-hop
  url: ${globals:neo4j.host}
  credentials: neo4j_credentials
  save_args:
    mode: overwrite
    script: >
      CREATE CONSTRAINT IF NOT EXISTS FOR (n:Entity) REQUIRE n.id IS UNIQUE;
    query: > 
      CREATE (n:Entity {{id: event.id, kg_sources: event.kg_sources}})
      WITH event, n
      CALL apoc.create.addLabels(n, [event.label]) YIELD node
      CALL apoc.create.setProperties(n, event.property_keys, event.property_values) YIELD node AS n2
      CALL apoc.create.setProperties(n, event.array_property_keys, event.array_property_values) YIELD node AS n3
      RETURN node

"moa_extraction.input_edges.{num_hops}_hop":
  type: matrix.datasets.neo4j.Neo4JSparkDataset
  database: analytics-{num_hops}-hop
  url: ${globals:neo4j.host}
  credentials: neo4j_credentials
  save_args:
    query: > 
      MATCH (subject:Entity {{id: event.subject}}), (object:Entity {{id: event.object}})
      WITH subject, object, event
      CALL apoc.create.relationship(subject, event.label, {{kg_sources: event.kg_sources}}, object) YIELD rel
      RETURN rel


# Intermediate and output datasets

"moa_extraction.reporting.add_tags_{num_hops}_hop":
  type: yaml.YAMLDataset
  filepath: ${globals:paths.moa_extraction}/reporting/add_tags_{num_hops}_hop.yml

"moa_extraction.feat.category_encoder_{num_hops}_hop":
  type: pickle.PickleDataset
  filepath: ${globals:paths.moa_extraction}/feat/category_encoder_{num_hops}_hop.pickle

"moa_extraction.feat.relation_encoder_{num_hops}_hop":
  type: pickle.PickleDataset
  filepath: ${globals:paths.moa_extraction}/feat/relation_encoder_{num_hops}_hop.pickle

"moa_extraction.int.{num_hops}_hop_indication_paths":
  <<: *_kg_paths_dataset
  filepath: ${globals:paths.moa_extraction}/int/{num_hops}_hop_indication_paths.parquet

moa_extraction.reporting.{num_hops}_hop_mapping_success:
  filepath: ${globals:paths.moa_extraction}/reporting/{num_hops}_hop_mapping_success
  type:  yaml.YAMLDataset

"moa_extraction.prm.{num_hops}_hop_splits":
  <<: *_kg_paths_dataset
  filepath: ${globals:paths.moa_extraction}/prm/{num_hops}_hop_split.parquet

"moa_extraction.feat.{num_hops}_hop_enriched_paths":
  <<: *_kg_paths_dataset
  filepath: ${globals:paths.moa_extraction}/feat/{num_hops}_hop_enriched_paths.parquet

"moa_extraction.models.{num_hops}_hop_model":
  type: pickle.PickleDataset
  filepath: ${globals:paths.moa_extraction}/models/{num_hops}_hop_model.pickle

"moa_extraction.models.{num_hops}_hop_model_split":
  type: pickle.PickleDataset
  filepath: ${globals:paths.moa_extraction}/models/{num_hops}_hop_model_split.pickle

"moa_extraction.model_output.{num_hops}_hop_evaluation_predictions":
  type: partitions.PartitionedDataset
  path: ${globals:paths.moa_extraction}/model_output/{num_hops}_hop_evaluation_predictions
  dataset: matrix.datasets.paths.KGPathsDataset
  load_args:
    engine: pyarrow

"moa_extraction.reporting.{num_hops}_hop_metrics":
  filepath: ${globals:paths.moa_extraction}/reporting/{num_hops}_hop_metrics
  type:  yaml.YAMLDataset

"moa_extraction.model_output.{num_hops}_hop_output_predictions":
  type: partitions.PartitionedDataset
  path: ${globals:paths.moa_extraction}/model_output/{num_hops}_hop_output_predictions
  dataset: matrix.datasets.paths.KGPathsDataset
  load_args:
    engine: pyarrow

"moa_extraction.reporting.{num_hops}_hop_predictions_report":
  type: partitions.PartitionedDataset
  path: ${globals:paths.moa_extraction}/reporting/{num_hops}_hop_predictions_report
  dataset: pandas.ExcelDataset

"moa_extraction.model_output.{num_hops}_hop_pair_info_sql":
  type: pandas.SQLTableDataset
  credentials:
    con: "sqlite:///${globals:paths.moa_extraction}/reporting/moa_extraction.db"
  table_name: moa_extraction_pair_info_{num_hops}_hop
  save_args:
    if_exists: replace
    index: false

"moa_extraction.model_output.{num_hops}_hop_predictions_sql":
  type: pandas.SQLTableDataset
  credentials: 
    con:  "sqlite:///${globals:paths.moa_extraction}/reporting/moa_extraction.db"
  table_name: moa_extraction_predictions_{num_hops}_hop
  save_args:
    if_exists: replace
    index: false