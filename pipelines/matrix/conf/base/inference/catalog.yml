_sheets_dataset: &_sheets_dataset
  type: matrix.datasets.gcp.GoogleSheetsDataset
  key: 1CioSCCQxUdACn1NfWU9XRyC-9j_ERc2hmZzaDd8XgcQ
  service_file: conf/local/service-account.json

_pandas_csv: &_pandas_csv
  type:  pandas.CSVDataset

# NOTE: Drug list is not yet published
inference.raw.disease_list:
  type: pandas.CSVDataset
  filepath: https://github.com/everycure-org/matrix-disease-list/releases/${globals:data_sources.ec-disease-list.version}/download/matrix-disease-list.tsv
  load_args:
    sep: "\t"

inference.raw.drug_list:
  type: pandas.CSVDataset
  # NOTE: This is currently being downloaded through the assets as the repository is private.
  filepath: https://api.github.com/repos/everycure-org/matrix-drug-list/releases/assets/${globals:data_sources.ec-drug-list.version}
  fs_args:
    Accept: application/octet-stream
    Authorization: token ${oc.env:GH_TOKEN}
  load_args:
    sep: "\t"

inference.sheet.disease_list:
  <<: [*_sheets_dataset]
  save_args:
    overwrite: True
    sheet_name: "normalized_disease_list"
    write_columns: ["category_class","label","definition","synonyms","subsets","crossreferences","curie","name"]
  load_args:
    sheet_name: "normalized_disease_list"
    columns: ["category_class","label","definition","synonyms","subsets","crossreferences","curie","name"]

inference.sheet.drug_list:
  <<: [*_sheets_dataset]
  save_args:
    overwrite: True
    sheet_name: "normalized_drug_list"
    write_columns: ['single_ID','Name_EMA','Approved_Europe','Name_PMDA','Approved_Japan','Name_Orange_Book','Approved_USA','Available_USA','ID_Label','Therapy_Name','Combination_Therapy','Ingredient_IDs','curie', 'name']
  load_args:
    sheet_name: "normalized_drug_list"
    columns: ['single_ID','Name_EMA','Approved_Europe','Name_PMDA','Approved_Japan','Name_Orange_Book','Approved_USA','Available_USA','ID_Label','Therapy_Name','Combination_Therapy','Ingredient_IDs','curie', 'name']

inference.sheet.normalized_inputs:
  <<: [*_sheets_dataset]
  load_args:
    sheet_name: Input
    columns: ["norm_drug_id", "norm_drug_id"]
  save_args:
    sheet_name: Input
    columns: ["norm_drug_id", "norm_disease_id"]

inference.request.type:
  type: pickle.PickleDataset
  filepath: ${globals:paths.reporting}/infer_type.pkl

# NOTE: Sheet is created for ech model
model_outputs.node.predictions:
  <<: [*_sheets_dataset]
  save_args:
    overwrite: True
    sheet_name: "output_predictions"
    write_columns: ["drug", "disease"]
  load_args:
    sheet_name: "output_predictions"
    columns: ["treat_score"]

inference.embed.nodes:
  type: pandas.ParquetDataset
  filepath: ${globals:paths.feat}/nodes

inference.model.xgb:
  type: pickle.PickleDataset
  filepath: data/06_models/xg_baseline/model.pkl

model_outputs.node.visualisations:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  artifact_path: "histogram"
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: ${globals:paths.tmp}/histogram_plot.png  
  