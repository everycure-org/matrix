_pandas_csv: &_pandas_csv
  type:  pandas.CSVDataset

_spark_parquet_ds: &_spark_parquet
  type: matrix.datasets.gcp.LazySparkDataset
  file_format: parquet
  save_args:
    mode: overwrite

_spark_csv: &_spark_csv
  type: spark.SparkDataset
  file_format: csv
  load_args:
    header: True
  save_args:
    mode: overwrite

_layer_raw: &_layer_raw
  metadata:
    kedro-viz:
      layer: raw

_layer_int: &_layer_int
  metadata:
    kedro-viz:
      layer: integration

# QC Results
#qc.int.{source}.qc_results:
#  <<: [*_spark_parquet, *_layer_int]
#  filepath: ${globals:paths.qc}/int/{source}/qc_results

quality_control.{source}.prm.ingestion_metrics:
  <<: [*_spark_parquet, *_layer_int]
  filepath: ${globals:paths.qc}/int/{source}/qc_results

# qc.int.robokop.qc_results_ingestion:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.qc}/int/{source}/qc_results/{source}_ingestion_metrics.parquet

# qc.int.rtx_kg2.qc_results_ingestion:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.qc}/int/{source}/qc_results/{source}_ingestion_metrics.parquet

# qc.int.robokop.qc_results_integration:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.qc}/int/{source}/qc_results/{source}_integration_metrics.parquet

# qc.int.rtx_kg2.qc_results_integration:
#   <<: [*_spark_parquet, *_layer_int]
#   filepath: ${globals:paths.qc}/int/{source}/qc_results/{source}_integration_metrics.parquet

