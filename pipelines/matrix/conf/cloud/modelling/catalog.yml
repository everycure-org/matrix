_model_ds: &_model_ds
  metadata:
    kedro-viz:
      layer: models

_reporting_ds: &_reporting_ds
  metadata:
    kedro-viz:
      layer: reporting

# NOTE: Saving an artifact, saving both locally and in MLFlow
# https://kedro-mlflow.readthedocs.io/en/stable/source/04_experimentation_tracking/03_version_datasets.html#how-to-version-data-in-a-kedro-project
"modelling.{model}.{shard}.reporting.tuning_convergence_plot":
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  artifact_path: "{model}/{shard}"
  dataset:
    <<: *_reporting_ds
    type: matplotlib.MatplotlibWriter
    filepath: ${globals:paths.tmp}/{model}/{shard}/convergence_plot.png

# NOTE: Tracking a model, other serialization formats possible.
# https://kedro-mlflow.readthedocs.io/en/stable/source/04_experimentation_tracking/04_version_models.html#how-to-track-models-using-mlflow-in-kedro-project
"modelling.{model}.models.model":
  <<: *_model_ds
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  pyfunc_workflow: python_model
  artifact_path: "{model}"

# NOTE: Saving a metric, more elaborate strategies possible, e.g., MlflowMetricHistoryDataset
# https://kedro-mlflow.readthedocs.io/en/stable/source/04_experimentation_tracking/05_version_metrics.html#saving-a-single-float-as-a-metric-with-mlflowmetricdataset
"modelling.{model}.reporting.metrics":
  <<: *_reporting_ds
  type: matrix.datasets.mlflow.MlflowMetricsDataset
  key_prefix: "{model}"