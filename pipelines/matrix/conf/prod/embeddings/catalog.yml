_neo4j_ds: &_neo4j_ds
  type: matrix.datasets.neo4j.Neo4JSparkDataset
  database: everycure
  url: ${oc.env:NEO4J_HOST}
  credentials: neo4j_credentials
  save_args:
    mode: "overwrite"

# embeddings.prm.graph.embeddings:
#   <<: *_neo4j_ds
#   save_args:
#     # NOTE: This catalog entry is redefined as we're using vertexai instead of openai to generate embeddings.
#     query: > 
#       MATCH (n:Entity {id: event.id})
#       WITH event, n
#       CALL apoc.ml.vertexai.embedding([event.input], event.accessToken, event.project) YIELD index, text, embedding
#       CALL apoc.create.setProperty(n, "embedding", embedding) YIELD node
#       RETURN node
#   load_args:
#     query: >
#       MATCH (n: Entity) RETURN n.id as id, n.embedding as embedding