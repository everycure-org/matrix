# overriding the default compose for CI. Several reasons:
# 1) we override the neo4j image to Intel
# 2) override the images to avoid keeping state in CI (no data mount)
# 3) add an executino of the matrix-pipeline in a container to execute against the services defined in the base compose file 
services:
  neo4j:
    # FUTURE: Newever container version gives issues, due to `apoc-extended`
    # and `gds` versions not being released yet. Update when released.
    image: neo4j:5.21.0-enterprise
    # overwriting volumes so we don't have any
    # https://docs.docker.com/reference/compose-file/merge/#reset-value
    volumes: !override 
      # note we do NOT mount data which makes the CI container stateless
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins

  mock-genai:
    environment:
      MOCKSERVER_LOG_LEVEL: ERROR

  matrix-pipeline:
    image: ${IMG}
    container_name: matrix
    #build: 
    #  context: "../"
    #  platforms: 
    #    - linux/amd64
    # NOTE: We're omitting --runner ThreadRunner due to a CI
    # only bug. We suspect that this is due to the hooks setup
    # that should be resolved in the following issue:
    # https://github.com/Galileo-Galilei/kedro-mlflow/issues/579
    entrypoint:
      - "/bin/sh"
      - -ecx
      - |
          kedro run -e test -p test --runner ThreadRunner --without-tags xg_ensemble,not-shared
    environment:
      NEO4J_HOST: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: admin
      OPENAI_ENDPOINT: http://mock-genai:1080/v1
      MLFLOW_ENDPOINT: http://mlflow:5000
      OPENAI_API_KEY: sk-proj-abc
    depends_on:
      neo4j:
        condition: service_healthy
      mlflow: 
        condition: service_healthy
    networks:
      - web
volumes:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins: