apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: sidecar-neo4j
  namespace: argo-workflows
spec:
  entrypoint: main
  volumeClaimTemplates:
  - metadata:
      name: neo4j-data                     
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
  templates:
  - name: main
    container:
      env:
        - name: WORKFLOW_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['workflows.argoproj.io/workflow']
        - name: RELEASE_VERSION
          value:  "test" 
        - name: EXPERIMENT
          value:  "test" 
        - name: MLFLOW_ENDPOINT
          value:  "http://mlflow-tracking.mlflow.svc.cluster.local:80" 
        - name: NEO4J_USER
          value: "neo4j"
        - name: NEO4J_PASSWORD
          value: "admin"
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: matrix-config
              key: GCP_PROJECT_ID
        - name: GCP_BUCKET
          valueFrom:
            configMapKeyRef:
              name: matrix-config
              key: GCP_BUCKET
        - name: OPENAI_API_KEY
          value: "foo"
      image: us-central1-docker.pkg.dev/mtrx-hub-dev-3of/matrix-images/matrix:laurens
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Waiting for Neo4j to be ready..."
          until curl -s http://localhost:7474/ready; do
            echo "Waiting..."
            sleep 5
          done
          echo "Neo4j is ready. Starting main application..."
          kedro run -p test -e test
    sidecars:
      # Neo4j enterprise sidecar
      - name: neo4j
        image: neo4j:5.21.0-enterprise
        env:
        - name: NEO4J_AUTH
          value: "neo4j/admin"
        - name: NEO4J_apoc_export_file_enabled
          value: "true"
        - name: NEO4J_apoc_import_file_enabled
          value: "true"
        - name: NEO4J_apoc_import_file_use__neo4j__config
          value: "true"
        - name: NEO4J_PLUGINS
          value: '["apoc", "graph-data-science", "apoc-extended"]'
        - name: NEO4J_dbms_security_auth__minimum__password__length
          value: "4"
        - name: NEO4J_dbms_security_procedures_whitelist
          value: "gds.*, apoc.*"
        - name: NEO4J_dbms_security_procedures_unrestricted
          value: "gds.*, apoc.*"
        - name: NEO4J_db_logs_query_enabled
          value: "OFF"
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          value: "yes"
        volumeMounts:
        - name: neo4j-data
          mountPath: /data