{# <project_root>/templates/argo_spec.tmpl #}
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo-workflows
  generateName: {{ package_name }}-
spec:
  entrypoint: dag
  templates:
  - name: kedro
    retryStrategy:
      limit: {% raw %}"{{inputs.parameters.num_retries}}"
    {% endraw %}
    retryPolicy: "Always"
    backoff:
      duration: "1"      # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"
      factor: 2
      maxDuration: "1m"  # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"
    affinity:
      nodeAntiAffinity: {}
    metadata:
      labels:
        {# Add label to have an ability to remove Kedro Pods easily #}
        app: kedro-argo
    inputs:
      parameters:
      - name: kedro_node
      - name: num_retries
    container:
      imagePullPolicy: Always
      image: {{ image }}
      env:
        - name: NEO4J_HOST
          value: bolt://neo4j.neo4j.svc.cluster.local:7687
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: matrix-secrets
              key: NEO4J_USER
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: matrix-secrets
              key: NEO4J_PASSWORD
        - name: OPENAI_ENDPOINT
          value: http://mock-genai:1080/v1
        - name: OPENAI_API_KEY
          value: dummy
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: matrix-config
              key: GCP_PROJECT_ID
        - name: GCP_BUCKET
          valueFrom:
            configMapKeyRef:
              name: matrix-config
              key: GCP_BUCKET
        - name: VERTEX_AI_ACCESS_TOKEN
          value: dummy
      command: [kedro]
      args: ["run", "-p", "{{ pipeline }}", "-e", "{{ env }}", "-n", {% raw %}"{{inputs.parameters.kedro_node}}" {% endraw %}]
  - name: dag
    dag:
      tasks:
      {% for task in tasks %}
      - name: {{ task.name }}
        template: kedro
        {% if task.deps %}
        dependencies:
        {% for dep in task.deps %}
          - {{ dep }}
        {% endfor %}
        {% endif %}
        arguments:
          parameters:
          - name: kedro_node
            value: {{ task.node }}
          - name: num_retries
            value: {{ task.get('retries', 0) }}
      {% endfor %}