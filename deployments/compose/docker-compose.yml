services:
  # Neo4J database
  neo4j:
    container_name: neo4j
    # note this works only on MacOS devices (or other ARM chipsets), check
    # `docker-compose.test.yml` for the override
    image: neo4j:5.21.0-enterprise
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    # https://neo4j.com/docs/operations-manual/current/docker/ref-settings/
    environment:
      - NEO4J_AUTH=neo4j/admin
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc", "graph-data-science", "apoc-extended"]
      - NEO4J_dbms_security_auth__minimum__password__length=4
      - NEO4J_dbms_security_procedures_whitelist=gds.*, apoc.*
      - NEO4J_dbms_security_procedures_unrestricted=gds.*, apoc.*
      - NEO4J_db_logs_query_enabled=OFF
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - ./neo4j_db/data:/data
      - ./neo4j_db/logs:/logs
      - ./neo4j_db/import:/var/lib/neo4j/import
      - ./neo4j_db/plugins:/plugins
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - web

  # Node synonymizer
  node-synonymizer:
    build: "../../services/synonymizer"
    environment:
      - DB_CONNECTION_STR=/usr/src/app/assets/node_synonymizer_v1.0_KG2.7.3.sqlite
    volumes:
      # NOTE: Asset files are really big, so mounting them in
      - "../../services/synonymizer/assets:/usr/src/app/assets"
    ports:
      - 8081:8081
    networks:
      web:


  # MockServer instance that is used to mock a GenAI API conform
  # the OpenAI API spec. This container is used to enable integration
  # testing.
  mock-genai:
    image: mockserver/mockserver
    restart: unless-stopped
    user: root
    ports:
      - 1080:1080
    environment:
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
      MOCKSERVER_ENABLE_CORS_FOR_API: "true"
      MOCKSERVER_ENABLE_CORS_FOR_ALL_RESPONSES: "true"
      MOCKSERVER_INITIALIZATION_JSON_PATH: /openapi/initializer.json
      MOCKSERVER_LOG_LEVEL: DEBUG
    networks:
      web:
        aliases:
          - mock.genai.com
    volumes:
      - ./mockgenai-initializer.json:/openapi/initializer.json:ro

  mlflow:
    container_name: mlflow
    build: "services/mlflow"
    ports:
      - "5001:5000"
    command: mlflow server --host 0.0.0.0
    healthcheck:
      test: wget http://localhost:5000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - web

networks:
  web:
    name: web
    driver: bridge